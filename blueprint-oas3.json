{
  "components": {
    "schemas": {
      "accounts": {
        "additionalProperties": false,
        "description": "Operating system user and group accounts to be created on the image.",
        "properties": {
          "groups": {
            "items": {
              "$ref": "#/components/schemas/accounts_groups"
            },
            "nullable": true,
            "type": "array"
          },
          "users": {
            "items": {
              "$ref": "#/components/schemas/accounts_users"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object",
        "x-omitempty": true
      },
      "accounts_groups": {
        "additionalProperties": false,
        "description": "Operating system group accounts to be created on the image.",
        "nullable": true,
        "properties": {
          "gid": {
            "description": "The group ID (GID) of the group. Must be non-zero.",
            "minimum": 1,
            "type": "integer",
            "x-go-name": "GID"
          },
          "name": {
            "description": "Group name. Accepted characters: lowercase letters, digits,\nunderscores, dollars, and hyphens. Name must not start with a hyphen. Maximum\nlength is 256 characters. The validation pattern is a relaxed version of\nhttps://github.com/shadow-maint/shadow/blob/master/lib/chkname.c\n",
            "maxLength": 256,
            "pattern": "^[a-zA-Z0-9_.][a-zA-Z0-9_.$-]*$",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "accounts_users": {
        "additionalProperties": false,
        "description": "Operating system user accounts to be created on the image.",
        "properties": {
          "description": {
            "description": "A longer description of the account.",
            "maxLength": 4096,
            "type": "string"
          },
          "expires": {
            "description": "The expiration date in the format YYYY-MM-DD. Leave empty to never expire.\n\nString-based type which accepts date (YYYY-MM-DD) or date-time (RFC3339)\nformat and only marshals into date format. This is needed for JSON/YAML compatibility\nsince YAML automatically converts strings which look like dates into time.Time.\n",
            "x-go-type": "EpochDays",
            "x-go-type-skip-optional-pointer": false
          },
          "force_password_change": {
            "description": "If set to true, the user will be forced to change their password\non first login.\n",
            "type": "boolean",
            "x-go-type-skip-optional-pointer": false
          },
          "gid": {
            "description": "The primary group ID (GID) of the user. Value of zero (or ommited\nvalue) means that the next available UID will be assigned.\n",
            "minimum": 1,
            "type": "integer",
            "x-go-name": "GID"
          },
          "groups": {
            "description": "Additional groups that the user should be a member of.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "home": {
            "description": "The home directory of the user.",
            "pattern": "^/",
            "type": "string"
          },
          "name": {
            "description": "Account name. Accepted characters: lowercase letters, digits,\nunderscores, dollars, and hyphens. Name must not start with a hyphen. Maximum\nlength is 256 characters. The validation pattern is a relaxed version of\nhttps://github.com/shadow-maint/shadow/blob/master/lib/chkname.c\n",
            "maxLength": 256,
            "pattern": "^[a-zA-Z0-9_.][a-zA-Z0-9_.$-]*$",
            "type": "string"
          },
          "password": {
            "description": "Password either in plain text or encrypted form. If the password\nis not provided, the account will be locked and the user will not be able\nto log in with a password. The password can be encrypted using the crypt(3)\nfunction. The format of the encrypted password is $id$salt$hashed, where\n$id is the algorithm used (1, 5, 6, or 2a).\n",
            "type": "string",
            "x-go-type-skip-optional-pointer": false
          },
          "shell": {
            "description": "The shell of the user.",
            "pattern": "^/",
            "type": "string"
          },
          "ssh_keys": {
            "description": "SSH keys to be added to the account's authorized_keys file.",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-name": "SSHKeys"
          },
          "uid": {
            "description": "The user ID (UID) of the user. Value of zero (or ommited value)\nmeans that the next available UID will be assigned.\n",
            "minimum": 1,
            "type": "integer",
            "x-go-name": "UID"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "anaconda_modules": {
        "enum": [
          "org.fedoraproject.Anaconda.Modules.Localization",
          "org.fedoraproject.Anaconda.Modules.Network",
          "org.fedoraproject.Anaconda.Modules.Payloads",
          "org.fedoraproject.Anaconda.Modules.Runtime",
          "org.fedoraproject.Anaconda.Modules.Security",
          "org.fedoraproject.Anaconda.Modules.Services",
          "org.fedoraproject.Anaconda.Modules.Storage",
          "org.fedoraproject.Anaconda.Modules.Subscription",
          "org.fedoraproject.Anaconda.Modules.Timezone",
          "org.fedoraproject.Anaconda.Modules.Users"
        ],
        "type": "string",
        "x-enum-varnames": [
          "AnacondaLocalization",
          "AnacondaNetwork",
          "AnacondaPayloads",
          "AnacondaRuntime",
          "AnacondaSecurity",
          "AnacondaServices",
          "AnacondaStorage",
          "AnacondaSubscription",
          "AnacondaTimezone",
          "AnacondaUsers"
        ],
        "x-go-type-name": "AnacondaModule"
      },
      "blueprint": {
        "additionalProperties": false,
        "description": "Image Builder new blueprint schema.\n\nTHIS IS WORK IN PROGRESS",
        "nullable": true,
        "properties": {
          "accounts": {
            "$ref": "#/components/schemas/accounts"
          },
          "architecture": {
            "description": "Architecture of the image. This is the architecture of the target system, not the build system.\n",
            "enum": [
              "x86_64",
              "aarch64",
              "ppc64le",
              "s390x",
              "riscv64"
            ],
            "example": "x86_64",
            "type": "string",
            "x-enum-varnames": [
              "ArchX86_64",
              "ArchAarch64",
              "ArchPPC64le",
              "ArchS390x",
              "ArchRISCV64"
            ],
            "x-go-type-name": "Arch"
          },
          "cacerts": {
            "description": "The CA certificates to be added to the image. The certificates\nare added to the system-wide CA trust store. The certificates are added to\nthe /etc/pki/ca-trust/source/anchors/ directory and the update-ca-trust command\nis run to update the system-wide CA trust store.\n",
            "items": {
              "$ref": "#/components/schemas/ca_cert"
            },
            "nullable": true,
            "type": "array",
            "x-go-name": "CACerts",
            "x-omitempty": true
          },
          "containers": {
            "description": "Containers to be pulled during the image build and stored in the\nimage at the default local container storage location that is appropriate\nfor the image type, so that all supported container tools like podman and\ncri-o will be able to work with it. The embedded containers are not started,\nto do so you can create systemd unit files or quadlets with the files customization.\n",
            "items": {
              "$ref": "#/components/schemas/container"
            },
            "nullable": true,
            "type": "array",
            "x-omitempty": true
          },
          "description": {
            "description": "The description attribute is a string that can be a longer description\nof the blueprint and is only used for display purposes.\n",
            "type": "string",
            "x-omitempty": true
          },
          "distribution": {
            "description": "Linux OS distribution name followed by dash and version.\n",
            "example": "fedora-13",
            "pattern": "^[a-zA-Z0-9]+-[\\.0-9]+$",
            "type": "string"
          },
          "dnf": {
            "$ref": "#/components/schemas/dnf"
          },
          "fips": {
            "$ref": "#/components/schemas/fips"
          },
          "fsnodes": {
            "description": "File system nodes details.\n\nYou can use the customization to create new files or to replace existing ones,\nif not restricted by the policy specified below. If the target path is an existing\nsymlink to another file, the symlink will be replaced by the custom file.\n\nPlease note that the parent directory of a specified file must exist. If it does\nnot exist, the image build will fail. One can ensure that the parent directory\nexists by specifying \"ensure_parents\".\n\nIn addition, the following files are not allowed to be created or replaced by\npolicy: /etc/fstab, /etc/shadow, /etc/passwd and /etc/group.\n\nUsing the files customization comes with a high chance of creating an image that\ndoesn't boot. Use this feature only if you know what you are doing. Although the\nfiles customization can be used to configure parts of the OS which can also be\nconfigured by other blueprint customizations, this use is discouraged. If possible,\nusers should always default to using the specialized blueprint customizations.\nNote that if you combine the files customizations with other customizations, the\nother customizations may not work as expected or may be overridden by the files\ncustomizations.\n\nYou can create custom directories as well. The existence of a specified directory\nis handled gracefully only if no explicit mode, user or group is specified. If any\nof these customizations are specified and the directory already exists in the\nimage, the image build will fail. The intention is to prevent changing the\nownership or permissions of existing directories.\n",
            "items": {
              "$ref": "#/components/schemas/fsnode"
            },
            "nullable": true,
            "type": "array",
            "x-go-name": "FSNodes",
            "x-omitempty": true
          },
          "hostname": {
            "description": "Hostname is an optional string that can be used to configure the\nhostname of the final image.\n",
            "type": "string",
            "x-omitempty": true
          },
          "ignition": {
            "description": "Provides Ignition configuration files to be used in edge-raw-image and\nedge-simplified-installer images. Check the RHEL for Edge butane specification for\na description of the supported configuration options.\n\nThe blueprint configuration can be done either by embedding an Ignition configuration\nfile into the image, or providing a provisioning URL that will be fetched at first boot.\n",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ignition_url"
              },
              {
                "$ref": "#/components/schemas/ignition_text"
              }
            ],
            "x-go-name": "Ignition",
            "x-go-type-name": "Ignition",
            "x-go-type-skip-optional-pointer": true
          },
          "installer": {
            "$ref": "#/components/schemas/installer"
          },
          "kernel": {
            "$ref": "#/components/schemas/kernel"
          },
          "locale": {
            "$ref": "#/components/schemas/locale"
          },
          "name": {
            "description": "The name attribute is a string that contains the name of the blueprint.\nIt can contain spaces, but they may be converted to dash characters during build.\nIt should be short and descriptive.\n",
            "type": "string",
            "x-omitempty": true
          },
          "network": {
            "$ref": "#/components/schemas/network"
          },
          "openscap": {
            "$ref": "#/components/schemas/openscap"
          },
          "registration": {
            "$ref": "#/components/schemas/registration"
          },
          "storage": {
            "$ref": "#/components/schemas/storage"
          },
          "systemd": {
            "$ref": "#/components/schemas/systemd"
          },
          "timedate": {
            "$ref": "#/components/schemas/time_date"
          }
        },
        "type": "object"
      },
      "ca_cert": {
        "additionalProperties": false,
        "description": "The CA certificates to be added to the image.\n",
        "properties": {
          "pem": {
            "description": "The PEM-encoded certificate.",
            "type": "string",
            "x-go-name": "PEM",
            "x-omitempty": true
          }
        },
        "required": [
          "pem"
        ],
        "type": "object",
        "x-go-name": "CACert",
        "x-omitempty": true
      },
      "container": {
        "additionalProperties": false,
        "properties": {
          "local_storage": {
            "default": false,
            "description": "Whether to pull the container image from the host's local-storage.",
            "type": "boolean"
          },
          "name": {
            "description": "Container name is an optional string to set the name under which the container image will be saved in the image. If not specified name falls back to the same value as source.",
            "type": "string"
          },
          "source": {
            "description": "Container image URL is a reference to a container image at a registry.",
            "type": "string"
          },
          "tls_verify": {
            "default": true,
            "description": "Verify TLS connection, default is true.",
            "type": "boolean",
            "x-go-name": "TLSVerify",
            "x-go-type-skip-optional-pointer": false
          }
        },
        "required": [
          "name",
          "source"
        ],
        "type": "object",
        "x-omitempty": true
      },
      "dnf": {
        "additionalProperties": false,
        "description": "DNF package managers details. When using virtual provides as the\npackage name the version glob should be *. And be aware that you will be unable\nto freeze the blueprint. This is because the provides will expand into multiple\npackages with their own names and versions.\n",
        "properties": {
          "groups": {
            "description": "Groups to install, must match exactly. Groups describes groups\nof packages to be installed into the image. Package groups are defined\nin the repository metadata. Each group has a descriptive name used primarily\nfor display in user interfaces and an ID more commonly used in kickstart\nfiles. Here, the ID is the expected way of listing a group. Groups have\nthree different ways of categorizing their packages: mandatory, default,\nand optional. For the purposes of blueprints, only mandatory and default\npackages will be installed. There is no mechanism for selecting optional\npackages.\n",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-omitempty": true
          },
          "import_keys": {
            "description": "Additional file paths to the GPG keys to import. The files\nmust be present in the image. Does not support importing from URLs.\n",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-omitempty": true
          },
          "modules": {
            "description": "Modules to enable or disable. This field only supports native DNF module names, not the full module stream name. For example, to enable the 'nodejs' module, use 'nodejs' as the value. To enable a specific stream, use 'nodejs:20'.\nSoftware Collections (SCL) modules must be enabled via the packages field.",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-omitempty": true
          },
          "packages": {
            "description": "Packages to install. Package name or NVRA is accepted as long\nas DNF can resolve it. Examples: vim-enhanced, vim-enhanced-9.1.866-1\nor vim-enhanced-9.1.866-1.fc41.x86_64. The packages can also be specified\nas @group_name to install all packages in the group.\n\nSoftware Collections (SCL) modules can be enabled via this field. For native DNF\nmodules, use the modules field instead.\n",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-omitempty": true
          },
          "repositories": {
            "description": "Third-party repositories are supported by the blueprint customizations.\n\nAll fields reflect configuration values of dnf, see man dnf.conf(5) for more information.\n",
            "items": {
              "$ref": "#/components/schemas/dnf_repository"
            },
            "type": "array",
            "x-omitempty": true
          }
        },
        "type": "object",
        "x-go-name": "DNF",
        "x-omitempty": true
      },
      "dnf_repository": {
        "additionalProperties": false,
        "properties": {
          "filename": {
            "description": "Repository filename to use for the repository configuration file.\nIf not provided, the ID is used. Filename must be provided without the .repo\nextension.\n",
            "maxLength": 256,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "type": "string",
            "x-go-type-skip-optional-pointer": true
          },
          "gpg_check": {
            "default": true,
            "description": "Enable GPG check for the repository. GPG key(s) must be provided. Disabled by default.",
            "type": "boolean",
            "x-go-name": "GPGCheck",
            "x-go-type-skip-optional-pointer": false
          },
          "gpg_check_repo": {
            "default": true,
            "description": "Enable GPG check for the repository metadata. Disabled by default. This is different from gpg_check, which is for the packages.\nThis is useful for third-party repositories that do not provide GPG keys for the repository metadata.",
            "type": "boolean",
            "x-go-name": "GPGCheckRepo",
            "x-go-type-skip-optional-pointer": false
          },
          "gpg_keys": {
            "description": "GPG keys for the repository.\n\nThe blueprint accepts both inline GPG keys and GPG key urls. If an inline GPG key is provided it\nwill be saved to the /etc/pki/rpm-gpg directory and will be referenced accordingly in the repository\nconfiguration. GPG keys are not imported to the RPM database and will only be imported when first\ninstalling a package from the third-party repository.\n",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-name": "GPGKeys"
          },
          "id": {
            "description": "Repository ID. Required.",
            "maxLength": 256,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "type": "string",
            "x-go-name": "ID"
          },
          "module_hotfixes": {
            "default": false,
            "description": "Enable module hotfixes for the repository. Disabled by default.\n\nAdds module_hotfixes flag to all repo types so it can be used during osbuild. This enables users\nto disable modularity filtering on specific repositories.\n",
            "type": "boolean"
          },
          "name": {
            "description": "Repository name.",
            "type": "string"
          },
          "priority": {
            "description": "Repository priority. When unset, default DNF priority is used. This is useful for third-party repositories that are not part of the base image.",
            "type": "integer",
            "x-go-type-skip-optional-pointer": false
          },
          "source": {
            "description": "Repository source.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/dnf_source_base_urls"
              },
              {
                "$ref": "#/components/schemas/dnf_source_metalink"
              },
              {
                "$ref": "#/components/schemas/dnf_source_mirrorlist"
              }
            ],
            "x-go-type-name": "DNFSource"
          },
          "tls_verify": {
            "default": true,
            "description": "Enable TLS verification for the repository. Enabled by default.",
            "type": "boolean",
            "x-go-name": "TLSVerify",
            "x-go-type-skip-optional-pointer": false
          },
          "usage": {
            "$ref": "#/components/schemas/dnf_repository_usage"
          }
        },
        "required": [
          "id"
        ],
        "type": "object",
        "x-go-name": "DNFRepository"
      },
      "dnf_repository_usage": {
        "additionalProperties": false,
        "properties": {
          "configure": {
            "default": true,
            "description": "Configure the repository for dnf on the created image. Enabled by default.\n\nA repository will be saved as /etc/yum.repos.d/repository-id and enabled so when the image is\nbooted, the repository will be available for dnf. This is useful for third-party repositories\nthat are not part of the base image.\n\nWhen this flag is disabled, the repository will be saved but not enabled.\n",
            "type": "boolean",
            "x-go-type-skip-optional-pointer": false
          },
          "install": {
            "default": true,
            "description": "Use the repository for image build. Enabled by default.\n\nWhen this flag is set, it is possible to install third-party packages during the image build.\n",
            "type": "boolean",
            "x-go-type-skip-optional-pointer": false
          }
        },
        "type": "object",
        "x-go-type-name": "DNFRepoUsage"
      },
      "dnf_source_base_urls": {
        "additionalProperties": false,
        "properties": {
          "urls": {
            "description": "Base URLs for the repository.",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-name": "URLs"
          }
        },
        "required": [
          "urls"
        ],
        "type": "object",
        "x-go-type-name": "DNFSourceBaseURLs"
      },
      "dnf_source_metalink": {
        "additionalProperties": false,
        "properties": {
          "metalink": {
            "description": "Metalink for the repository.",
            "type": "string"
          }
        },
        "required": [
          "metalink"
        ],
        "type": "object",
        "x-go-type-name": "DNFSourceMetalink"
      },
      "dnf_source_mirrorlist": {
        "additionalProperties": false,
        "properties": {
          "mirrorlist": {
            "description": "Mirror list for the repository.",
            "type": "string"
          }
        },
        "required": [
          "mirrorlist"
        ],
        "type": "object",
        "x-go-type-name": "DNFSourceMirrorlist"
      },
      "error": {
        "type": "string"
      },
      "fips": {
        "additionalProperties": false,
        "description": "FIPS details, optional.",
        "properties": {
          "enabled": {
            "description": "Enables the system FIPS mode (disabled by default). Currently\nonly edge-raw-image, edge-installer, edge-simplified-installer, edge-ami\nand edge-vsphere images support this customization.\n",
            "type": "boolean"
          }
        },
        "type": "object",
        "x-go-name": "FIPS",
        "x-omitempty": true
      },
      "firewall_enabled": {
        "additionalProperties": false,
        "default": true,
        "description": "Whether the firewall rule is enabled or not. Defaults to true.",
        "type": "boolean",
        "x-go-type-skip-optional-pointer": false,
        "x-omitempty": true,
        "x-order": 2
      },
      "firewall_from_to": {
        "additionalProperties": false,
        "properties": {
          "enabled": {
            "$ref": "#/components/schemas/firewall_enabled"
          },
          "from": {
            "description": "The from port number, must be between 1 and 65535.\n",
            "maximum": 65535,
            "minimum": 1,
            "type": "integer",
            "x-omitempty": true
          },
          "protocol": {
            "$ref": "#/components/schemas/network_protocol"
          },
          "to": {
            "description": "The to port number, must be between 1 and 65535.\n",
            "maximum": 65535,
            "minimum": 1,
            "type": "integer",
            "x-omitempty": true
          }
        },
        "type": "object"
      },
      "firewall_port": {
        "additionalProperties": false,
        "properties": {
          "enabled": {
            "$ref": "#/components/schemas/firewall_enabled"
          },
          "port": {
            "description": "The port number, must be between 1 and 65535.\n",
            "maximum": 65535,
            "minimum": 1,
            "type": "integer",
            "x-omitempty": true
          },
          "protocol": {
            "$ref": "#/components/schemas/network_protocol"
          }
        },
        "type": "object"
      },
      "firewall_service": {
        "additionalProperties": false,
        "properties": {
          "enabled": {
            "$ref": "#/components/schemas/firewall_enabled"
          },
          "protocol": {
            "$ref": "#/components/schemas/network_protocol"
          },
          "service": {
            "description": "The name of the IANA service name. This is the name of the service as defined in\nthe /etc/services file.\n",
            "minLength": 2,
            "type": "string",
            "x-omitempty": true
          }
        },
        "type": "object"
      },
      "fsnode": {
        "additionalProperties": false,
        "properties": {
          "contents": {
            "description": "Contents is the file system node contents. When not present,\nan empty file is created.\n",
            "oneOf": [
              {
                "$ref": "#/components/schemas/fsnode_contents_text"
              },
              {
                "$ref": "#/components/schemas/fsnode_contents_base64"
              }
            ],
            "x-go-type-name": "FSNodeContents",
            "x-omitempty": true
          },
          "ensure_parents": {
            "default": false,
            "description": "EnsureParents is a boolean that determines if the parent directories\nshould be created if they do not exist.\n",
            "type": "boolean"
          },
          "group": {
            "default": "root",
            "description": "Group is the file system node group. Can be also a decimal GID. Defaults to root.",
            "type": "string"
          },
          "mode": {
            "description": "Mode is the file system node permissions. Defaults to 0644 for\nfiles and 0755 for directories. Must be a valid octal number as a string.\n",
            "x-go-type": "FSNodeMode"
          },
          "path": {
            "description": "Path is the absolute path to the file or directory.",
            "pattern": "^/",
            "type": "string"
          },
          "state": {
            "default": "present",
            "description": "State is the state of the file system node, one of: present, absent. Defaults to present.\n",
            "enum": [
              "present",
              "absent"
            ],
            "type": "string",
            "x-enum-varnames": [
              "FSStatePresent",
              "FSStateAbsent"
            ],
            "x-go-type-name": "FSNodeState"
          },
          "type": {
            "default": "file",
            "description": "Type is the type of the file system node, one of: file, dir.\n",
            "enum": [
              "file",
              "dir"
            ],
            "type": "string",
            "x-enum-varnames": [
              "FSNodeFile",
              "FSNodeDir"
            ],
            "x-go-type-name": "FSNodeType"
          },
          "user": {
            "default": "root",
            "description": "User is the file system node owner. Can be also a decimal UID. Defaults to root.",
            "type": "string"
          }
        },
        "required": [
          "path"
        ],
        "type": "object",
        "x-go-name": "FSNode",
        "x-omitempty": true
      },
      "fsnode_contents_base64": {
        "additionalProperties": false,
        "properties": {
          "base64": {
            "description": "Base64-encoded file contents. Useful for binaries.",
            "type": "string"
          }
        },
        "required": [
          "base64"
        ],
        "type": "object",
        "x-go-type-name": "FSNodeContentsBase64"
      },
      "fsnode_contents_text": {
        "additionalProperties": false,
        "properties": {
          "text": {
            "description": "Plain text file contents.",
            "type": "string"
          }
        },
        "required": [
          "text"
        ],
        "type": "object",
        "x-go-type-name": "FSNodeContentsText"
      },
      "ignition_text": {
        "additionalProperties": false,
        "properties": {
          "text": {
            "description": "Ignition data formatted in plain text.",
            "type": "string"
          }
        },
        "required": [
          "text"
        ],
        "type": "object"
      },
      "ignition_url": {
        "additionalProperties": false,
        "properties": {
          "url": {
            "description": "The URL to the Ignition configuration to be used by Ignition. This configuration\nis a URL to a remote Ignition configuration.\n",
            "type": "string",
            "x-go-name": "URL"
          }
        },
        "required": [
          "url"
        ],
        "type": "object",
        "x-go-name": "IgnitionURL"
      },
      "installer": {
        "additionalProperties": false,
        "description": "Extra customization for Anaconda installer (ISO) and Edge/IOT simplified\ninstaller image types.\n",
        "properties": {
          "anaconda": {
            "$ref": "#/components/schemas/installer_anaconda"
          },
          "coreos": {
            "$ref": "#/components/schemas/installer_coreos"
          }
        },
        "type": "object",
        "x-omitempty": true
      },
      "installer_anaconda": {
        "additionalProperties": false,
        "description": "Extra customizations for Anaconda installer (ISO) image types.\n\nBlueprint customizations that match the kickstart options (languages, keyboard,\ntimezone) will change the value in the kickstart file as well.\n",
        "properties": {
          "disabled_modules": {
            "description": "Anaconda modules to be disabled. The list of modules that\ncan be disabled is limited to the modules that are not required for the\ninstallation. The list of modules that can be disabled is limited to the\nmodules that are not required for the installation.\n",
            "items": {
              "$ref": "#/components/schemas/anaconda_modules"
            },
            "type": "array",
            "x-omitempty": true
          },
          "enabled_modules": {
            "description": "Anaconda modules to be enabled. The list of modules that\ncan be enabled is limited to the modules that are not required for the\ninstallation. The list of modules that can be enabled is limited to the\nmodules that are not required for the installation.\n",
            "items": {
              "$ref": "#/components/schemas/anaconda_modules"
            },
            "type": "array",
            "x-omitempty": true
          },
          "kickstart": {
            "description": "Kickstart installer configuration.",
            "type": "string",
            "x-omitempty": true
          },
          "sudo_nopasswd": {
            "description": "Sudo users with NOPASSWD option. Adds a snippet to the kickstart\nfile that, after installation, will create drop-in files in /etc/sudoers.d\nto allow the specified users and groups to run sudo without a password (groups\nmust be prefixed with %).\n",
            "items": {
              "maxLength": 256,
              "pattern": "^[%a-zA-Z0-9_.][a-zA-Z0-9_.$-]*$",
              "type": "string"
            },
            "type": "array",
            "x-go-name": "SudoNOPASSWD",
            "x-omitempty": true
          },
          "unattended": {
            "default": false,
            "description": "Unattended installation Anaconda flag. When not set, Anaconda\ninstaller will ask for user input.\n",
            "type": "boolean",
            "x-omitempty": true
          }
        },
        "type": "object"
      },
      "installer_coreos": {
        "additionalProperties": false,
        "description": "CoreOS installer configuration is required by the edge-simplified-installer\nimage. It allows to define the destination device for the installation.\n",
        "properties": {
          "installation_device": {
            "description": "Installation device for iot/edge simplified installer image types.",
            "type": "string"
          }
        },
        "type": "object",
        "x-go-name": "CoreOS",
        "x-go-type-name": "InstallerCoreOS"
      },
      "kernel": {
        "additionalProperties": false,
        "description": "Custom Linux kernel details, optional.",
        "properties": {
          "cmdline_append": {
            "description": "An optional string to append arguments to the bootloader kernel\ncommand line. The list will be concatenated with spaces.\n",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-omitempty": true
          },
          "package": {
            "description": "Kernel package name to be installed.",
            "type": "string",
            "x-omitempty": true
          }
        },
        "type": "object",
        "x-omitempty": true
      },
      "locale": {
        "additionalProperties": false,
        "description": "An optional object that contains the following attributes to customize\nthe locale settings for the system. If the locale is not specified, the default\nlocale and keyboard settings are used: en_US.UTF-8 and us.\n",
        "properties": {
          "keyboards": {
            "description": "The keyboards attribute is a list of strings that contains\nthe keyboards to be installed on the image. To list available keyboards,\nrun: localectl list-keymaps\n\nThe default value depends on the image type and distribution, usually it is\nset to \"en_US.UTF-8\" for most types.\n",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-omitempty": true
          },
          "languages": {
            "description": "The languages attribute is a list of strings that contains\nthe languages to be installed on the image. To list available languages,\nrun: localectl list-locales\n\nThe default value depends on the image type and distribution, usually it is\nset to \"en_US.UTF-8\" for most types.\n",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-omitempty": true
          }
        },
        "type": "object",
        "x-omitempty": true
      },
      "network": {
        "additionalProperties": false,
        "description": "Networking details including firewall configuration.",
        "properties": {
          "firewall": {
            "$ref": "#/components/schemas/network_firewall"
          }
        },
        "type": "object",
        "x-omitempty": true
      },
      "network_firewall": {
        "additionalProperties": false,
        "description": "Firewall details - package firewalld must be installed in the image.",
        "properties": {
          "services": {
            "description": "Services to enable or disable. The service can be defined via an assigned\nIANA name, port number or port range.\n\nServices are processed in order, when a service is disabled and then accidentally\nenabled via a port or a port range, the service will be enabled in the end.\n\nBy default the firewall blocks all access, except for services that enable their\nports explicitly such as the sshd.\n",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/firewall_service"
                },
                {
                  "$ref": "#/components/schemas/firewall_port"
                },
                {
                  "$ref": "#/components/schemas/firewall_from_to"
                }
              ],
              "type": "object",
              "x-go-name": "NetworkService",
              "x-go-type-name": "NetworkService"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true,
            "x-omitempty": true
          }
        },
        "type": "object"
      },
      "network_protocol": {
        "additionalProperties": false,
        "description": "The network protocol used for the connection. This can be either TCP, UDP, ICMP or ANY protocol.\n\nEmpty value is equivalent to `any` for port definitions. Protocol is ignored for service definitions.\n",
        "enum": [
          "tcp",
          "udp",
          "icmp"
        ],
        "type": "string",
        "x-enum-varnames": [
          "ProtocolTCP",
          "ProtocolUDP",
          "ProtocolICMP"
        ],
        "x-go-type-name": "NetworkProtocol",
        "x-omitempty": true,
        "x-order": 1
      },
      "openscap": {
        "additionalProperties": false,
        "description": "OpenSCAP policy to be applied on the operating system. Added in\nRHEL 8.7 \u0026 RHEL 9.1. It is possible to either list policy rules (enable or\ndisable) or to provide a full policy file.\n",
        "properties": {
          "datastream": {
            "description": "Datastream to use for the scan. The datastream is the path to\nthe SCAP datastream file to use for the scan. If the datastream parameter\nis not provided, a sensible default based on the selected distro will be\nchosen.\n",
            "type": "string"
          },
          "profile_id": {
            "description": "The desired security profile ID.",
            "type": "string",
            "x-go-name": "ProfileID"
          },
          "tailoring": {
            "description": "An optional OpenSCAP tailoring information. Can be done via profile\nselection or tailoring JSON file.\n\nIn case of profile selection, a tailoring file with a new tailoring profile\nID is created and saved to the image. The new tailoring profile ID is\ncreated by appending the _osbuild_tailoring suffix to the base profile.\nFor example, given tailoring options for the cis profile, tailoring profile\nxccdf_org.ssgproject.content_profile_cis_osbuild_tailoring will be created.\nThe default namespace of the rules is org.ssgproject.content, so the prefix\nmay be omitted for rules under this namespace, i.e.\norg.ssgproject.content_grub2_password and grub2_password are functionally\nequivalent. The generated tailoring file is saved to the image as\n/usr/share/xml/osbuild-oscap-tailoring/tailoring.xml or, for newer releases,\nin the /oscap_data directory, this is the location used for other OpenSCAP\nrelated artifacts.\n\nIt is also possible to use JSON tailoring. In that case, custom JSON file\nmust be provided using the blueprint and used in json_filepath field\nalongside with json_profile_id field. The generated XML tailoring file\nis saved to the image as /oscap_data/tailoring.xml.\n",
            "oneOf": [
              {
                "$ref": "#/components/schemas/tailoring_json"
              },
              {
                "$ref": "#/components/schemas/tailoring_profiles"
              }
            ],
            "x-go-type-name": "OpenSCAPTailoring",
            "x-omitempty": true
          }
        },
        "required": [
          "profile_id"
        ],
        "type": "object",
        "x-go-name": "OpenSCAP",
        "x-omitempty": true
      },
      "partition_btrfs": {
        "additionalProperties": false,
        "properties": {
          "minsize": {
            "$ref": "#/components/schemas/storage_minsize"
          },
          "subvolumes": {
            "description": "BTRFS subvolumes to create.\n",
            "items": {
              "$ref": "#/components/schemas/partition_subvolumes"
            },
            "type": "array",
            "x-omitempty": true
          },
          "type": {
            "$ref": "#/components/schemas/partition_type"
          }
        },
        "required": [
          "type",
          "subvolumes"
        ],
        "type": "object",
        "x-go-type-name": "PartitionBTRFS"
      },
      "partition_lv": {
        "additionalProperties": false,
        "properties": {
          "fs_type": {
            "$ref": "#/components/schemas/storage_fstype"
          },
          "label": {
            "description": "Optional label of the partition.",
            "type": "string"
          },
          "minsize": {
            "$ref": "#/components/schemas/storage_minsize"
          },
          "mountpoint": {
            "$ref": "#/components/schemas/storage_mountpoint"
          },
          "name": {
            "description": "Logical volume name. When not set, will be generated automatically.",
            "type": "string"
          }
        },
        "type": "object",
        "x-go-type-name": "PartitionLV"
      },
      "partition_lvm": {
        "additionalProperties": false,
        "properties": {
          "logical_volumes": {
            "description": "LVM logical volumes to create within the volume group.\n",
            "items": {
              "$ref": "#/components/schemas/partition_lv"
            },
            "type": "array",
            "x-omitempty": true
          },
          "minsize": {
            "$ref": "#/components/schemas/storage_minsize"
          },
          "name": {
            "description": "Optional name of the volume group. Will be generated automatically if not specified.",
            "type": "string",
            "x-omitempty": true
          },
          "type": {
            "$ref": "#/components/schemas/partition_type"
          }
        },
        "required": [
          "type",
          "logical_volumes"
        ],
        "type": "object",
        "x-go-type-name": "PartitionLVM"
      },
      "partition_plain": {
        "additionalProperties": false,
        "properties": {
          "fs_type": {
            "$ref": "#/components/schemas/storage_fstype"
          },
          "label": {
            "description": "Optional label of the partition.",
            "type": "string"
          },
          "minsize": {
            "$ref": "#/components/schemas/storage_minsize"
          },
          "mountpoint": {
            "$ref": "#/components/schemas/storage_mountpoint"
          },
          "type": {
            "$ref": "#/components/schemas/partition_type"
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "partition_subvolumes": {
        "additionalProperties": false,
        "properties": {
          "mountpoint": {
            "$ref": "#/components/schemas/storage_mountpoint"
          },
          "name": {
            "description": "Subvolume name, must also define its parent volume.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "partition_type": {
        "description": "Partition type: plain, lvm, or btrfs. Must be set.",
        "enum": [
          "plain",
          "lvm",
          "btrfs"
        ],
        "type": "string",
        "x-enum-varnames": [
          "PartTypePlain",
          "PartTypeLVM",
          "PartTypeBTRFS"
        ]
      },
      "registration": {
        "additionalProperties": false,
        "description": "Registration details for various registration types, namely Red Hat\nSubscription Manager.\n",
        "properties": {
          "fdo": {
            "$ref": "#/components/schemas/registration_fdo"
          },
          "redhat": {
            "$ref": "#/components/schemas/registration_redhat"
          }
        },
        "type": "object",
        "x-omitempty": true
      },
      "registration_connector": {
        "additionalProperties": false,
        "description": "Red Hat console.redhat.com connector (rhc) details.",
        "properties": {
          "enabled": {
            "description": "Enables rhc (Red Hat Connector) during boot.",
            "type": "boolean"
          }
        },
        "required": [
          "enabled"
        ],
        "type": "object"
      },
      "registration_fdo": {
        "additionalProperties": false,
        "description": "FDO allows users to configure FIDO Device Onboard device initialization\nparameters. It is only available with the edge-simplified-installer or\niot-simplified-installer image types.\n",
        "properties": {
          "di_mfg_string_type_mac_iface": {
            "description": "Optional interface name for the MAC address.",
            "type": "string"
          },
          "diun_pub_key_hash": {
            "description": "FDO server public key hex-encoded hash. Cannot be used together with insecure option or root certs.",
            "type": "string"
          },
          "diun_pub_key_insecure": {
            "default": false,
            "description": "FDO insecure option. When set, both hash or root certs must not be set.",
            "type": "boolean"
          },
          "diun_pub_key_root_certs": {
            "description": "FDO server public key root certificate path. Cannot be used together with insecure option or hash.",
            "type": "string"
          },
          "manufacturing_server_url": {
            "description": "FDO manufacturing server URL.",
            "type": "string",
            "x-go-name": "ManufacturingServerURL"
          }
        },
        "required": [
          "manufacturing_server_url"
        ],
        "type": "object",
        "x-go-name": "RegistrationFDO"
      },
      "registration_insights": {
        "additionalProperties": false,
        "description": "Red Hat Insights client details.",
        "properties": {
          "enabled": {
            "description": "Enables insights client during boot.",
            "type": "boolean"
          }
        },
        "required": [
          "enabled"
        ],
        "type": "object"
      },
      "registration_redhat": {
        "additionalProperties": false,
        "description": "Registration details for Red Hat operating system images.",
        "properties": {
          "activation_key": {
            "description": "Subscription manager activation key to use during registration.\nA list of keys to use to redeem or apply specific subscriptions to the system.\n",
            "type": "string"
          },
          "connector": {
            "$ref": "#/components/schemas/registration_connector"
          },
          "insights": {
            "$ref": "#/components/schemas/registration_insights"
          },
          "organization": {
            "description": "Subscription manager organization name to use during registration.",
            "type": "string"
          },
          "subscription_manager": {
            "$ref": "#/components/schemas/registration_rhsm"
          }
        },
        "type": "object",
        "x-go-name": "RegistrationRedHat"
      },
      "registration_rhsm": {
        "additionalProperties": false,
        "description": "Subscription manager details (internal use only). The customization\nexpects that subscription-manager package is installed in the image, which\nis by default part of the RHEL distribution bootable images. To explicitly\ninstall the package, add it to the packages section in the blueprint.\nThe customization is not supported on Fedora distribution images.\n",
        "properties": {
          "auto_enable": {
            "description": "Enabled auto_enable_yum_plugins rhsm configuration in rhsm.conf.",
            "type": "boolean",
            "x-go-type-skip-optional-pointer": false
          },
          "auto_registration": {
            "description": "Enabled auto_registration rhsmcertd configuration in rhsm.conf.",
            "type": "boolean",
            "x-go-type-skip-optional-pointer": false
          },
          "enabled": {
            "description": "Enables the subscription-manager dnf plugin.",
            "type": "boolean",
            "x-go-type-skip-optional-pointer": false
          },
          "product_plugin_enabled": {
            "description": "Enables the product-id dnf plugin.",
            "type": "boolean",
            "x-go-type-skip-optional-pointer": false
          },
          "repository_management": {
            "description": "Enabled repository_management rhsm configuration in rhsm.conf.",
            "type": "boolean",
            "x-go-type-skip-optional-pointer": false
          }
        },
        "type": "object",
        "x-go-name": "RegistrationRHSM"
      },
      "storage": {
        "additionalProperties": false,
        "description": "Disk partitioning details. Not available for installer-based images.\n\nGeneral principles:\n\n1. All sizes, whether for specific filesystems, partitions, logical volumes,\nor the image itself, are treated as minimum requirements. This means the full\ndisk image size is always larger than the size of the sum of the partitions,\ndue to requirements for headers and metadata.\n\n2. The partition that contains the root filesystem, whether this is a plain\nformatted partition, an LVM Volume Group, or a Btrfs partition, is always last\nin the partition table layout when it is automatically added. For Disk\ncustomizations the user-defined order is respected.\n\n3. In the case of raw partitioning (no LVM and no Btrfs), the partition\ncontaining the root filesystem is grown to fill any left over space on the\npartition table. Logical Volumes are not grown to fill the space in the Volume\nGroup since they are trivial to grow on a live system.\n",
        "properties": {
          "minsize": {
            "$ref": "#/components/schemas/storage_minsize"
          },
          "partitions": {
            "description": "Partitions of the following types: plain (default), lvm, or btrfs.\n",
            "items": {
              "$ref": "#/components/schemas/storage_partition"
            },
            "type": "array",
            "x-go-type-name": "StoragePartitions"
          },
          "type": {
            "$ref": "#/components/schemas/storage_type"
          }
        },
        "required": [
          "type",
          "partitions"
        ],
        "type": "object",
        "x-omitempty": true
      },
      "storage_fstype": {
        "description": "File system type: ext4, xfs, swap, or vfat.\n\nDefault value is image-type specific.\n",
        "enum": [
          "ext4",
          "xfs",
          "swap",
          "vfat"
        ],
        "type": "string",
        "x-enum-varnames": [
          "FSTypeExt4",
          "FSTypeXFS",
          "FSTypeSwap",
          "FSTypeVFAT"
        ],
        "x-go-name": "FSType"
      },
      "storage_minsize": {
        "description": "Minimum size of the disk or partition.\n\nSize must be formatted as an integer followed by whitespace and then either a\ndecimal unit (B, KB/kB, MB, GB, TB, PB, EB) or binary unit (KiB, MiB, GiB,\nTiB, PiB, EiB).\n\nIf unit is ommited, it is assumed to be in bytes.\n",
        "x-go-type": "ByteSize"
      },
      "storage_mountpoint": {
        "description": "Mount point of the partition. Must start with a slash.",
        "pattern": "^/",
        "type": "string"
      },
      "storage_partition": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/partition_plain"
          },
          {
            "$ref": "#/components/schemas/partition_lvm"
          },
          {
            "$ref": "#/components/schemas/partition_btrfs"
          }
        ],
        "description": "Partitions of the following types: plain (default), lvm, or btrfs.\n",
        "type": "object",
        "x-go-type-skip-optional-pointer": true
      },
      "storage_type": {
        "description": "Device partitioning type: gpt (default) or mbr.\n\nDefault value is image specific.\n",
        "enum": [
          "gpt",
          "mbr"
        ],
        "type": "string",
        "x-enum-varnames": [
          "StorageTypeGPT",
          "StorageTypeMBR"
        ]
      },
      "systemd": {
        "additionalProperties": false,
        "description": "Systemd unit configuration.\n\nThis section can be used to control which services are enabled at boot time.\nSome image types already have services enabled or disabled in order for the image\nto work correctly, and cannot be overridden. For example, ami image type requires\nsshd, chronyd, and cloud-init services. Blueprint services do not replace these\nservices, but add them to the list of services already present in the templates,\nif any.\n",
        "properties": {
          "disabled": {
            "description": "The disabled attribute is a list of strings that contains the systemd units to be disabled.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "enabled": {
            "description": "The enabled attribute is a list of strings that contains the systemd units to be enabled.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "masked": {
            "description": "The masked attribute is a list of strings that contains the systemd units to be masked.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-omitempty": true
      },
      "tailoring_json": {
        "additionalProperties": false,
        "properties": {
          "json_filepath": {
            "description": "JSON filepath, must be used with json_profile_id and cannot be used with selected and unselected fields.",
            "pattern": "^/",
            "type": "string",
            "x-go-name": "JSONFilePath"
          },
          "json_profile_id": {
            "description": "JSON profile ID, must be used with json_filepath and cannot be used with selected and unselected fields.",
            "type": "string",
            "x-go-name": "JSONProfileID"
          }
        },
        "required": [
          "json_profile_id",
          "json_filepath"
        ],
        "type": "object",
        "x-go-name": "TailoringJSON"
      },
      "tailoring_profiles": {
        "additionalProperties": false,
        "properties": {
          "selected": {
            "description": "Selected rules, cannot be used with json_profile_id and json_filepath.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "unselected": {
            "description": "Unselected rules, cannot be used with json_profile_id and json_filepath.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "text": {
        "type": "string"
      },
      "time_date": {
        "additionalProperties": false,
        "description": "Time and date details allowing configuration of the timezone and\nNTP servers. The timezone is set by default to UTC.\n",
        "properties": {
          "ntp_servers": {
            "description": "An optional list of strings containing NTP servers to use. If\nnot provided the distribution defaults are used.\n",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-name": "NTPServers"
          },
          "timezone": {
            "default": "UTC",
            "description": "System time zone. Defaults to UTC. To list available time zones run:\n\ntimedatectl list-timezones\n",
            "type": "string"
          }
        },
        "type": "object",
        "x-omitempty": true
      }
    }
  },
  "info": {
    "contact": {
      "name": "Red Hat Image Builder Team",
      "url": "https://osbuild.org"
    },
    "description": "Image Builder Blueprint\n",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "title": "Blueprint schema",
    "version": "1.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "/export_toml": {
      "post": {
        "operationId": "export_toml",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/blueprint"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/text"
                    }
                  }
                }
              }
            },
            "description": "The blueprint is valid"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "An error occurred"
          }
        },
        "summary": "Export to TOML"
      }
    },
    "/validate": {
      "post": {
        "operationId": "validate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/blueprint"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The blueprint is valid"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "An error occurred"
          }
        },
        "summary": "Validate"
      }
    }
  },
  "servers": [
    {
      "description": "Production server",
      "url": "https://osbuild.org/wip/api/v1"
    }
  ]
}
