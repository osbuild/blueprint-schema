/*
Blueprint schema

Image Builder Blueprint  WORK IN PROGRESS 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BlueprintRegistrationRedhatSubscriptionManager type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlueprintRegistrationRedhatSubscriptionManager{}

// BlueprintRegistrationRedhatSubscriptionManager struct for BlueprintRegistrationRedhatSubscriptionManager
type BlueprintRegistrationRedhatSubscriptionManager struct {
	// Enabled auto_registration plugin configuration.
	AutoRegistration bool `json:"auto_registration"`
	// Enables the subscription-manager DNF plugin.
	Enabled bool `json:"enabled"`
	// Enables the product-id DNF plugin.
	ProductPluginEnabled bool `json:"product_plugin_enabled"`
	// Enabled repository_management plugin configuration.
	RepositoryManagement bool `json:"repository_management"`
}

type _BlueprintRegistrationRedhatSubscriptionManager BlueprintRegistrationRedhatSubscriptionManager

// NewBlueprintRegistrationRedhatSubscriptionManager instantiates a new BlueprintRegistrationRedhatSubscriptionManager object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlueprintRegistrationRedhatSubscriptionManager(autoRegistration bool, enabled bool, productPluginEnabled bool, repositoryManagement bool) *BlueprintRegistrationRedhatSubscriptionManager {
	this := BlueprintRegistrationRedhatSubscriptionManager{}
	this.AutoRegistration = autoRegistration
	this.Enabled = enabled
	this.ProductPluginEnabled = productPluginEnabled
	this.RepositoryManagement = repositoryManagement
	return &this
}

// NewBlueprintRegistrationRedhatSubscriptionManagerWithDefaults instantiates a new BlueprintRegistrationRedhatSubscriptionManager object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlueprintRegistrationRedhatSubscriptionManagerWithDefaults() *BlueprintRegistrationRedhatSubscriptionManager {
	this := BlueprintRegistrationRedhatSubscriptionManager{}
	var autoRegistration bool = true
	this.AutoRegistration = autoRegistration
	var enabled bool = true
	this.Enabled = enabled
	var productPluginEnabled bool = true
	this.ProductPluginEnabled = productPluginEnabled
	var repositoryManagement bool = true
	this.RepositoryManagement = repositoryManagement
	return &this
}

// GetAutoRegistration returns the AutoRegistration field value
func (o *BlueprintRegistrationRedhatSubscriptionManager) GetAutoRegistration() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AutoRegistration
}

// GetAutoRegistrationOk returns a tuple with the AutoRegistration field value
// and a boolean to check if the value has been set.
func (o *BlueprintRegistrationRedhatSubscriptionManager) GetAutoRegistrationOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutoRegistration, true
}

// SetAutoRegistration sets field value
func (o *BlueprintRegistrationRedhatSubscriptionManager) SetAutoRegistration(v bool) {
	o.AutoRegistration = v
}

// GetEnabled returns the Enabled field value
func (o *BlueprintRegistrationRedhatSubscriptionManager) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *BlueprintRegistrationRedhatSubscriptionManager) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *BlueprintRegistrationRedhatSubscriptionManager) SetEnabled(v bool) {
	o.Enabled = v
}

// GetProductPluginEnabled returns the ProductPluginEnabled field value
func (o *BlueprintRegistrationRedhatSubscriptionManager) GetProductPluginEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ProductPluginEnabled
}

// GetProductPluginEnabledOk returns a tuple with the ProductPluginEnabled field value
// and a boolean to check if the value has been set.
func (o *BlueprintRegistrationRedhatSubscriptionManager) GetProductPluginEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductPluginEnabled, true
}

// SetProductPluginEnabled sets field value
func (o *BlueprintRegistrationRedhatSubscriptionManager) SetProductPluginEnabled(v bool) {
	o.ProductPluginEnabled = v
}

// GetRepositoryManagement returns the RepositoryManagement field value
func (o *BlueprintRegistrationRedhatSubscriptionManager) GetRepositoryManagement() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.RepositoryManagement
}

// GetRepositoryManagementOk returns a tuple with the RepositoryManagement field value
// and a boolean to check if the value has been set.
func (o *BlueprintRegistrationRedhatSubscriptionManager) GetRepositoryManagementOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RepositoryManagement, true
}

// SetRepositoryManagement sets field value
func (o *BlueprintRegistrationRedhatSubscriptionManager) SetRepositoryManagement(v bool) {
	o.RepositoryManagement = v
}

func (o BlueprintRegistrationRedhatSubscriptionManager) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlueprintRegistrationRedhatSubscriptionManager) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["auto_registration"] = o.AutoRegistration
	toSerialize["enabled"] = o.Enabled
	toSerialize["product_plugin_enabled"] = o.ProductPluginEnabled
	toSerialize["repository_management"] = o.RepositoryManagement
	return toSerialize, nil
}

func (o *BlueprintRegistrationRedhatSubscriptionManager) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"auto_registration",
		"enabled",
		"product_plugin_enabled",
		"repository_management",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBlueprintRegistrationRedhatSubscriptionManager := _BlueprintRegistrationRedhatSubscriptionManager{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBlueprintRegistrationRedhatSubscriptionManager)

	if err != nil {
		return err
	}

	*o = BlueprintRegistrationRedhatSubscriptionManager(varBlueprintRegistrationRedhatSubscriptionManager)

	return err
}

type NullableBlueprintRegistrationRedhatSubscriptionManager struct {
	value *BlueprintRegistrationRedhatSubscriptionManager
	isSet bool
}

func (v NullableBlueprintRegistrationRedhatSubscriptionManager) Get() *BlueprintRegistrationRedhatSubscriptionManager {
	return v.value
}

func (v *NullableBlueprintRegistrationRedhatSubscriptionManager) Set(val *BlueprintRegistrationRedhatSubscriptionManager) {
	v.value = val
	v.isSet = true
}

func (v NullableBlueprintRegistrationRedhatSubscriptionManager) IsSet() bool {
	return v.isSet
}

func (v *NullableBlueprintRegistrationRedhatSubscriptionManager) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlueprintRegistrationRedhatSubscriptionManager(val *BlueprintRegistrationRedhatSubscriptionManager) *NullableBlueprintRegistrationRedhatSubscriptionManager {
	return &NullableBlueprintRegistrationRedhatSubscriptionManager{value: val, isSet: true}
}

func (v NullableBlueprintRegistrationRedhatSubscriptionManager) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlueprintRegistrationRedhatSubscriptionManager) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


