/*
Blueprint schema

Image Builder Blueprint  WORK IN PROGRESS 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BlueprintStoragePartitionsInnerSubvolumesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlueprintStoragePartitionsInnerSubvolumesInner{}

// BlueprintStoragePartitionsInnerSubvolumesInner struct for BlueprintStoragePartitionsInnerSubvolumesInner
type BlueprintStoragePartitionsInnerSubvolumesInner struct {
	// Mount point of the subvolume. Required. Swap filesystem type is not supported on BTRFS volumes.
	Mountpoint *string `json:"mountpoint,omitempty" validate:"regexp=^\\/"`
	// Subvolume name, must also define its parent volume.
	Name *string `json:"name,omitempty"`
}

// NewBlueprintStoragePartitionsInnerSubvolumesInner instantiates a new BlueprintStoragePartitionsInnerSubvolumesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlueprintStoragePartitionsInnerSubvolumesInner() *BlueprintStoragePartitionsInnerSubvolumesInner {
	this := BlueprintStoragePartitionsInnerSubvolumesInner{}
	return &this
}

// NewBlueprintStoragePartitionsInnerSubvolumesInnerWithDefaults instantiates a new BlueprintStoragePartitionsInnerSubvolumesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlueprintStoragePartitionsInnerSubvolumesInnerWithDefaults() *BlueprintStoragePartitionsInnerSubvolumesInner {
	this := BlueprintStoragePartitionsInnerSubvolumesInner{}
	return &this
}

// GetMountpoint returns the Mountpoint field value if set, zero value otherwise.
func (o *BlueprintStoragePartitionsInnerSubvolumesInner) GetMountpoint() string {
	if o == nil || IsNil(o.Mountpoint) {
		var ret string
		return ret
	}
	return *o.Mountpoint
}

// GetMountpointOk returns a tuple with the Mountpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlueprintStoragePartitionsInnerSubvolumesInner) GetMountpointOk() (*string, bool) {
	if o == nil || IsNil(o.Mountpoint) {
		return nil, false
	}
	return o.Mountpoint, true
}

// HasMountpoint returns a boolean if a field has been set.
func (o *BlueprintStoragePartitionsInnerSubvolumesInner) HasMountpoint() bool {
	if o != nil && !IsNil(o.Mountpoint) {
		return true
	}

	return false
}

// SetMountpoint gets a reference to the given string and assigns it to the Mountpoint field.
func (o *BlueprintStoragePartitionsInnerSubvolumesInner) SetMountpoint(v string) {
	o.Mountpoint = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BlueprintStoragePartitionsInnerSubvolumesInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlueprintStoragePartitionsInnerSubvolumesInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BlueprintStoragePartitionsInnerSubvolumesInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BlueprintStoragePartitionsInnerSubvolumesInner) SetName(v string) {
	o.Name = &v
}

func (o BlueprintStoragePartitionsInnerSubvolumesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlueprintStoragePartitionsInnerSubvolumesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Mountpoint) {
		toSerialize["mountpoint"] = o.Mountpoint
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableBlueprintStoragePartitionsInnerSubvolumesInner struct {
	value *BlueprintStoragePartitionsInnerSubvolumesInner
	isSet bool
}

func (v NullableBlueprintStoragePartitionsInnerSubvolumesInner) Get() *BlueprintStoragePartitionsInnerSubvolumesInner {
	return v.value
}

func (v *NullableBlueprintStoragePartitionsInnerSubvolumesInner) Set(val *BlueprintStoragePartitionsInnerSubvolumesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableBlueprintStoragePartitionsInnerSubvolumesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableBlueprintStoragePartitionsInnerSubvolumesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlueprintStoragePartitionsInnerSubvolumesInner(val *BlueprintStoragePartitionsInnerSubvolumesInner) *NullableBlueprintStoragePartitionsInnerSubvolumesInner {
	return &NullableBlueprintStoragePartitionsInnerSubvolumesInner{value: val, isSet: true}
}

func (v NullableBlueprintStoragePartitionsInnerSubvolumesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlueprintStoragePartitionsInnerSubvolumesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


