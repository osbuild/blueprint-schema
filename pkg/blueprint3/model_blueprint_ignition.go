/*
Blueprint schema

Image Builder Blueprint  WORK IN PROGRESS 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BlueprintIgnition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlueprintIgnition{}

// BlueprintIgnition struct for BlueprintIgnition
type BlueprintIgnition struct {
	Embedded NullableBlueprintIgnitionEmbedded
	// The URL to the Ignition configuration to be used by Ignition. This configuration is a URL to a remote Ignition configuration. The firstboot_url is used if the embedded configuration is not specified.  Cannot be used with embedded_base64 or embedded_text.
	FirstbootUrl *string
}

// NewBlueprintIgnition instantiates a new BlueprintIgnition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlueprintIgnition() *BlueprintIgnition {
	this := BlueprintIgnition{}
	return &this
}

// NewBlueprintIgnitionWithDefaults instantiates a new BlueprintIgnition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlueprintIgnitionWithDefaults() *BlueprintIgnition {
	this := BlueprintIgnition{}
	return &this
}

// GetEmbedded returns the Embedded field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BlueprintIgnition) GetEmbedded() BlueprintIgnitionEmbedded {
	if o == nil || IsNil(o.Embedded.Get()) {
		var ret BlueprintIgnitionEmbedded
		return ret
	}
	return *o.Embedded.Get()
}

// GetEmbeddedOk returns a tuple with the Embedded field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BlueprintIgnition) GetEmbeddedOk() (*BlueprintIgnitionEmbedded, bool) {
	if o == nil {
		return nil, false
	}
	return o.Embedded.Get(), o.Embedded.IsSet()
}

// HasEmbedded returns a boolean if a field has been set.
func (o *BlueprintIgnition) HasEmbedded() bool {
	if o != nil && o.Embedded.IsSet() {
		return true
	}

	return false
}

// SetEmbedded gets a reference to the given NullableBlueprintIgnitionEmbedded and assigns it to the Embedded field.
func (o *BlueprintIgnition) SetEmbedded(v BlueprintIgnitionEmbedded) {
	o.Embedded.Set(&v)
}
// SetEmbeddedNil sets the value for Embedded to be an explicit nil
func (o *BlueprintIgnition) SetEmbeddedNil() {
	o.Embedded.Set(nil)
}

// UnsetEmbedded ensures that no value is present for Embedded, not even an explicit nil
func (o *BlueprintIgnition) UnsetEmbedded() {
	o.Embedded.Unset()
}

// GetFirstbootUrl returns the FirstbootUrl field value if set, zero value otherwise.
func (o *BlueprintIgnition) GetFirstbootUrl() string {
	if o == nil || IsNil(o.FirstbootUrl) {
		var ret string
		return ret
	}
	return *o.FirstbootUrl
}

// GetFirstbootUrlOk returns a tuple with the FirstbootUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlueprintIgnition) GetFirstbootUrlOk() (*string, bool) {
	if o == nil || IsNil(o.FirstbootUrl) {
		return nil, false
	}
	return o.FirstbootUrl, true
}

// HasFirstbootUrl returns a boolean if a field has been set.
func (o *BlueprintIgnition) HasFirstbootUrl() bool {
	if o != nil && !IsNil(o.FirstbootUrl) {
		return true
	}

	return false
}

// SetFirstbootUrl gets a reference to the given string and assigns it to the FirstbootUrl field.
func (o *BlueprintIgnition) SetFirstbootUrl(v string) {
	o.FirstbootUrl = &v
}

func (o BlueprintIgnition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlueprintIgnition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Embedded.IsSet() {
		toSerialize["embedded"] = o.Embedded.Get()
	}
	if !IsNil(o.FirstbootUrl) {
		toSerialize["firstboot_url"] = o.FirstbootUrl
	}
	return toSerialize, nil
}

type NullableBlueprintIgnition struct {
	value *BlueprintIgnition
	isSet bool
}

func (v NullableBlueprintIgnition) Get() *BlueprintIgnition {
	return v.value
}

func (v *NullableBlueprintIgnition) Set(val *BlueprintIgnition) {
	v.value = val
	v.isSet = true
}

func (v NullableBlueprintIgnition) IsSet() bool {
	return v.isSet
}

func (v *NullableBlueprintIgnition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlueprintIgnition(val *BlueprintIgnition) *NullableBlueprintIgnition {
	return &NullableBlueprintIgnition{value: val, isSet: true}
}

func (v NullableBlueprintIgnition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlueprintIgnition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


