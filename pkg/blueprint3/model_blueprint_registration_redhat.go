/*
Blueprint schema

Image Builder Blueprint  WORK IN PROGRESS 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BlueprintRegistrationRedhat type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlueprintRegistrationRedhat{}

// BlueprintRegistrationRedhat struct for BlueprintRegistrationRedhat
type BlueprintRegistrationRedhat struct {
	// Subscription manager activation key to use during registration. A list of keys to use to redeem or apply specific subscriptions to the system.
	ActivationKey *string `json:"activation_key,omitempty"`
	Connector *BlueprintRegistrationRedhatConnector `json:"connector,omitempty"`
	Insights *BlueprintRegistrationRedhatInsights `json:"insights,omitempty"`
	// Subscription manager organization name to use during registration.
	Organization *string `json:"organization,omitempty"`
	SubscriptionManager *BlueprintRegistrationRedhatSubscriptionManager `json:"subscription_manager,omitempty"`
}

// NewBlueprintRegistrationRedhat instantiates a new BlueprintRegistrationRedhat object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlueprintRegistrationRedhat() *BlueprintRegistrationRedhat {
	this := BlueprintRegistrationRedhat{}
	return &this
}

// NewBlueprintRegistrationRedhatWithDefaults instantiates a new BlueprintRegistrationRedhat object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlueprintRegistrationRedhatWithDefaults() *BlueprintRegistrationRedhat {
	this := BlueprintRegistrationRedhat{}
	return &this
}

// GetActivationKey returns the ActivationKey field value if set, zero value otherwise.
func (o *BlueprintRegistrationRedhat) GetActivationKey() string {
	if o == nil || IsNil(o.ActivationKey) {
		var ret string
		return ret
	}
	return *o.ActivationKey
}

// GetActivationKeyOk returns a tuple with the ActivationKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlueprintRegistrationRedhat) GetActivationKeyOk() (*string, bool) {
	if o == nil || IsNil(o.ActivationKey) {
		return nil, false
	}
	return o.ActivationKey, true
}

// HasActivationKey returns a boolean if a field has been set.
func (o *BlueprintRegistrationRedhat) HasActivationKey() bool {
	if o != nil && !IsNil(o.ActivationKey) {
		return true
	}

	return false
}

// SetActivationKey gets a reference to the given string and assigns it to the ActivationKey field.
func (o *BlueprintRegistrationRedhat) SetActivationKey(v string) {
	o.ActivationKey = &v
}

// GetConnector returns the Connector field value if set, zero value otherwise.
func (o *BlueprintRegistrationRedhat) GetConnector() BlueprintRegistrationRedhatConnector {
	if o == nil || IsNil(o.Connector) {
		var ret BlueprintRegistrationRedhatConnector
		return ret
	}
	return *o.Connector
}

// GetConnectorOk returns a tuple with the Connector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlueprintRegistrationRedhat) GetConnectorOk() (*BlueprintRegistrationRedhatConnector, bool) {
	if o == nil || IsNil(o.Connector) {
		return nil, false
	}
	return o.Connector, true
}

// HasConnector returns a boolean if a field has been set.
func (o *BlueprintRegistrationRedhat) HasConnector() bool {
	if o != nil && !IsNil(o.Connector) {
		return true
	}

	return false
}

// SetConnector gets a reference to the given BlueprintRegistrationRedhatConnector and assigns it to the Connector field.
func (o *BlueprintRegistrationRedhat) SetConnector(v BlueprintRegistrationRedhatConnector) {
	o.Connector = &v
}

// GetInsights returns the Insights field value if set, zero value otherwise.
func (o *BlueprintRegistrationRedhat) GetInsights() BlueprintRegistrationRedhatInsights {
	if o == nil || IsNil(o.Insights) {
		var ret BlueprintRegistrationRedhatInsights
		return ret
	}
	return *o.Insights
}

// GetInsightsOk returns a tuple with the Insights field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlueprintRegistrationRedhat) GetInsightsOk() (*BlueprintRegistrationRedhatInsights, bool) {
	if o == nil || IsNil(o.Insights) {
		return nil, false
	}
	return o.Insights, true
}

// HasInsights returns a boolean if a field has been set.
func (o *BlueprintRegistrationRedhat) HasInsights() bool {
	if o != nil && !IsNil(o.Insights) {
		return true
	}

	return false
}

// SetInsights gets a reference to the given BlueprintRegistrationRedhatInsights and assigns it to the Insights field.
func (o *BlueprintRegistrationRedhat) SetInsights(v BlueprintRegistrationRedhatInsights) {
	o.Insights = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *BlueprintRegistrationRedhat) GetOrganization() string {
	if o == nil || IsNil(o.Organization) {
		var ret string
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlueprintRegistrationRedhat) GetOrganizationOk() (*string, bool) {
	if o == nil || IsNil(o.Organization) {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *BlueprintRegistrationRedhat) HasOrganization() bool {
	if o != nil && !IsNil(o.Organization) {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given string and assigns it to the Organization field.
func (o *BlueprintRegistrationRedhat) SetOrganization(v string) {
	o.Organization = &v
}

// GetSubscriptionManager returns the SubscriptionManager field value if set, zero value otherwise.
func (o *BlueprintRegistrationRedhat) GetSubscriptionManager() BlueprintRegistrationRedhatSubscriptionManager {
	if o == nil || IsNil(o.SubscriptionManager) {
		var ret BlueprintRegistrationRedhatSubscriptionManager
		return ret
	}
	return *o.SubscriptionManager
}

// GetSubscriptionManagerOk returns a tuple with the SubscriptionManager field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlueprintRegistrationRedhat) GetSubscriptionManagerOk() (*BlueprintRegistrationRedhatSubscriptionManager, bool) {
	if o == nil || IsNil(o.SubscriptionManager) {
		return nil, false
	}
	return o.SubscriptionManager, true
}

// HasSubscriptionManager returns a boolean if a field has been set.
func (o *BlueprintRegistrationRedhat) HasSubscriptionManager() bool {
	if o != nil && !IsNil(o.SubscriptionManager) {
		return true
	}

	return false
}

// SetSubscriptionManager gets a reference to the given BlueprintRegistrationRedhatSubscriptionManager and assigns it to the SubscriptionManager field.
func (o *BlueprintRegistrationRedhat) SetSubscriptionManager(v BlueprintRegistrationRedhatSubscriptionManager) {
	o.SubscriptionManager = &v
}

func (o BlueprintRegistrationRedhat) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlueprintRegistrationRedhat) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActivationKey) {
		toSerialize["activation_key"] = o.ActivationKey
	}
	if !IsNil(o.Connector) {
		toSerialize["connector"] = o.Connector
	}
	if !IsNil(o.Insights) {
		toSerialize["insights"] = o.Insights
	}
	if !IsNil(o.Organization) {
		toSerialize["organization"] = o.Organization
	}
	if !IsNil(o.SubscriptionManager) {
		toSerialize["subscription_manager"] = o.SubscriptionManager
	}
	return toSerialize, nil
}

type NullableBlueprintRegistrationRedhat struct {
	value *BlueprintRegistrationRedhat
	isSet bool
}

func (v NullableBlueprintRegistrationRedhat) Get() *BlueprintRegistrationRedhat {
	return v.value
}

func (v *NullableBlueprintRegistrationRedhat) Set(val *BlueprintRegistrationRedhat) {
	v.value = val
	v.isSet = true
}

func (v NullableBlueprintRegistrationRedhat) IsSet() bool {
	return v.isSet
}

func (v *NullableBlueprintRegistrationRedhat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlueprintRegistrationRedhat(val *BlueprintRegistrationRedhat) *NullableBlueprintRegistrationRedhat {
	return &NullableBlueprintRegistrationRedhat{value: val, isSet: true}
}

func (v NullableBlueprintRegistrationRedhat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlueprintRegistrationRedhat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


