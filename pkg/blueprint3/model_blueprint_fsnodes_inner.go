/*
Blueprint schema

Image Builder Blueprint  WORK IN PROGRESS 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BlueprintFsnodesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlueprintFsnodesInner{}

// BlueprintFsnodesInner struct for BlueprintFsnodesInner
type BlueprintFsnodesInner struct {
	// Type is the type of the file system node, one of: file, dir.
	Type *string `json:"type,omitempty"`
	Contents *BlueprintFsnodesInnerContents `json:"contents,omitempty"`
	// EnsureParents is a boolean that determines if the parent directories should be created if they do not exist.
	EnsureParents *bool `json:"ensure_parents,omitempty"`
	// Group is the file system node group. Defaults to root.
	Group *string `json:"group,omitempty"`
	// Mode is the file system node permissions. Defaults to 0644 for files and 0755 for directories.
	Mode *int32 `json:"mode,omitempty"`
	// Path is the absolute path to the file or directory.
	Path string `json:"path" validate:"regexp=^\\/"`
	// State is the state of the file system node, one of: present, absent.
	State *string `json:"state,omitempty"`
	// User is the file system node owner. Defaults to root.
	User *string `json:"user,omitempty"`
}

type _BlueprintFsnodesInner BlueprintFsnodesInner

// NewBlueprintFsnodesInner instantiates a new BlueprintFsnodesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlueprintFsnodesInner(path string) *BlueprintFsnodesInner {
	this := BlueprintFsnodesInner{}
	return &this
}

// NewBlueprintFsnodesInnerWithDefaults instantiates a new BlueprintFsnodesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlueprintFsnodesInnerWithDefaults() *BlueprintFsnodesInner {
	this := BlueprintFsnodesInner{}
	var type_ string = "file"
	this.Type = &type_
	var ensureParents bool = false
	this.EnsureParents = &ensureParents
	var group string = "root"
	this.Group = &group
	var state string = "present"
	this.State = &state
	var user string = "root"
	this.User = &user
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *BlueprintFsnodesInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlueprintFsnodesInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *BlueprintFsnodesInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *BlueprintFsnodesInner) SetType(v string) {
	o.Type = &v
}

// GetContents returns the Contents field value if set, zero value otherwise.
func (o *BlueprintFsnodesInner) GetContents() BlueprintFsnodesInnerContents {
	if o == nil || IsNil(o.Contents) {
		var ret BlueprintFsnodesInnerContents
		return ret
	}
	return *o.Contents
}

// GetContentsOk returns a tuple with the Contents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlueprintFsnodesInner) GetContentsOk() (*BlueprintFsnodesInnerContents, bool) {
	if o == nil || IsNil(o.Contents) {
		return nil, false
	}
	return o.Contents, true
}

// HasContents returns a boolean if a field has been set.
func (o *BlueprintFsnodesInner) HasContents() bool {
	if o != nil && !IsNil(o.Contents) {
		return true
	}

	return false
}

// SetContents gets a reference to the given BlueprintFsnodesInnerContents and assigns it to the Contents field.
func (o *BlueprintFsnodesInner) SetContents(v BlueprintFsnodesInnerContents) {
	o.Contents = &v
}

// GetEnsureParents returns the EnsureParents field value if set, zero value otherwise.
func (o *BlueprintFsnodesInner) GetEnsureParents() bool {
	if o == nil || IsNil(o.EnsureParents) {
		var ret bool
		return ret
	}
	return *o.EnsureParents
}

// GetEnsureParentsOk returns a tuple with the EnsureParents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlueprintFsnodesInner) GetEnsureParentsOk() (*bool, bool) {
	if o == nil || IsNil(o.EnsureParents) {
		return nil, false
	}
	return o.EnsureParents, true
}

// HasEnsureParents returns a boolean if a field has been set.
func (o *BlueprintFsnodesInner) HasEnsureParents() bool {
	if o != nil && !IsNil(o.EnsureParents) {
		return true
	}

	return false
}

// SetEnsureParents gets a reference to the given bool and assigns it to the EnsureParents field.
func (o *BlueprintFsnodesInner) SetEnsureParents(v bool) {
	o.EnsureParents = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *BlueprintFsnodesInner) GetGroup() string {
	if o == nil || IsNil(o.Group) {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlueprintFsnodesInner) GetGroupOk() (*string, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *BlueprintFsnodesInner) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *BlueprintFsnodesInner) SetGroup(v string) {
	o.Group = &v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *BlueprintFsnodesInner) GetMode() int32 {
	if o == nil || IsNil(o.Mode) {
		var ret int32
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlueprintFsnodesInner) GetModeOk() (*int32, bool) {
	if o == nil || IsNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *BlueprintFsnodesInner) HasMode() bool {
	if o != nil && !IsNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given int32 and assigns it to the Mode field.
func (o *BlueprintFsnodesInner) SetMode(v int32) {
	o.Mode = &v
}

// GetPath returns the Path field value
func (o *BlueprintFsnodesInner) GetPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *BlueprintFsnodesInner) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Path, true
}

// SetPath sets field value
func (o *BlueprintFsnodesInner) SetPath(v string) {
	o.Path = v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *BlueprintFsnodesInner) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlueprintFsnodesInner) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *BlueprintFsnodesInner) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *BlueprintFsnodesInner) SetState(v string) {
	o.State = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *BlueprintFsnodesInner) GetUser() string {
	if o == nil || IsNil(o.User) {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlueprintFsnodesInner) GetUserOk() (*string, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *BlueprintFsnodesInner) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *BlueprintFsnodesInner) SetUser(v string) {
	o.User = &v
}

func (o BlueprintFsnodesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlueprintFsnodesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Contents) {
		toSerialize["contents"] = o.Contents
	}
	if !IsNil(o.EnsureParents) {
		toSerialize["ensure_parents"] = o.EnsureParents
	}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if !IsNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	toSerialize["path"] = o.Path
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	return toSerialize, nil
}

func (o *BlueprintFsnodesInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"path",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBlueprintFsnodesInner := _BlueprintFsnodesInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBlueprintFsnodesInner)

	if err != nil {
		return err
	}

	*o = BlueprintFsnodesInner(varBlueprintFsnodesInner)

	return err
}

type NullableBlueprintFsnodesInner struct {
	value *BlueprintFsnodesInner
	isSet bool
}

func (v NullableBlueprintFsnodesInner) Get() *BlueprintFsnodesInner {
	return v.value
}

func (v *NullableBlueprintFsnodesInner) Set(val *BlueprintFsnodesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableBlueprintFsnodesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableBlueprintFsnodesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlueprintFsnodesInner(val *BlueprintFsnodesInner) *NullableBlueprintFsnodesInner {
	return &NullableBlueprintFsnodesInner{value: val, isSet: true}
}

func (v NullableBlueprintFsnodesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlueprintFsnodesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


