/*
Blueprint schema

Image Builder Blueprint  WORK IN PROGRESS 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BlueprintContainersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlueprintContainersInner{}

// BlueprintContainersInner struct for BlueprintContainersInner
type BlueprintContainersInner struct {
	// Whether to pull the container image from the host's local-storage.
	LocalStorage *bool `json:"local_storage,omitempty"`
	// Container name is an optional string to set the name under which the container image will be saved in the image. If not specified name falls back to the same value as source.
	Name string `json:"name"`
	// Container image URL is a reference to a container image at a registry.
	Source string `json:"source"`
	TlsVerify NullableBool `json:"tls_verify,omitempty"`
}

type _BlueprintContainersInner BlueprintContainersInner

// NewBlueprintContainersInner instantiates a new BlueprintContainersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlueprintContainersInner(name string, source string) *BlueprintContainersInner {
	this := BlueprintContainersInner{}
	var localStorage bool = false
	this.LocalStorage = &localStorage
	this.Name = name
	this.Source = source
	return &this
}

// NewBlueprintContainersInnerWithDefaults instantiates a new BlueprintContainersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlueprintContainersInnerWithDefaults() *BlueprintContainersInner {
	this := BlueprintContainersInner{}
	var localStorage bool = false
	this.LocalStorage = &localStorage
	return &this
}

// GetLocalStorage returns the LocalStorage field value if set, zero value otherwise.
func (o *BlueprintContainersInner) GetLocalStorage() bool {
	if o == nil || IsNil(o.LocalStorage) {
		var ret bool
		return ret
	}
	return *o.LocalStorage
}

// GetLocalStorageOk returns a tuple with the LocalStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlueprintContainersInner) GetLocalStorageOk() (*bool, bool) {
	if o == nil || IsNil(o.LocalStorage) {
		return nil, false
	}
	return o.LocalStorage, true
}

// HasLocalStorage returns a boolean if a field has been set.
func (o *BlueprintContainersInner) HasLocalStorage() bool {
	if o != nil && !IsNil(o.LocalStorage) {
		return true
	}

	return false
}

// SetLocalStorage gets a reference to the given bool and assigns it to the LocalStorage field.
func (o *BlueprintContainersInner) SetLocalStorage(v bool) {
	o.LocalStorage = &v
}

// GetName returns the Name field value
func (o *BlueprintContainersInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BlueprintContainersInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *BlueprintContainersInner) SetName(v string) {
	o.Name = v
}

// GetSource returns the Source field value
func (o *BlueprintContainersInner) GetSource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *BlueprintContainersInner) GetSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *BlueprintContainersInner) SetSource(v string) {
	o.Source = v
}

// GetTlsVerify returns the TlsVerify field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BlueprintContainersInner) GetTlsVerify() bool {
	if o == nil || IsNil(o.TlsVerify.Get()) {
		var ret bool
		return ret
	}
	return *o.TlsVerify.Get()
}

// GetTlsVerifyOk returns a tuple with the TlsVerify field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BlueprintContainersInner) GetTlsVerifyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TlsVerify.Get(), o.TlsVerify.IsSet()
}

// HasTlsVerify returns a boolean if a field has been set.
func (o *BlueprintContainersInner) HasTlsVerify() bool {
	if o != nil && o.TlsVerify.IsSet() {
		return true
	}

	return false
}

// SetTlsVerify gets a reference to the given NullableBool and assigns it to the TlsVerify field.
func (o *BlueprintContainersInner) SetTlsVerify(v bool) {
	o.TlsVerify.Set(&v)
}
// SetTlsVerifyNil sets the value for TlsVerify to be an explicit nil
func (o *BlueprintContainersInner) SetTlsVerifyNil() {
	o.TlsVerify.Set(nil)
}

// UnsetTlsVerify ensures that no value is present for TlsVerify, not even an explicit nil
func (o *BlueprintContainersInner) UnsetTlsVerify() {
	o.TlsVerify.Unset()
}

func (o BlueprintContainersInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlueprintContainersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LocalStorage) {
		toSerialize["local_storage"] = o.LocalStorage
	}
	toSerialize["name"] = o.Name
	toSerialize["source"] = o.Source
	if o.TlsVerify.IsSet() {
		toSerialize["tls_verify"] = o.TlsVerify.Get()
	}
	return toSerialize, nil
}

func (o *BlueprintContainersInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"source",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBlueprintContainersInner := _BlueprintContainersInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBlueprintContainersInner)

	if err != nil {
		return err
	}

	*o = BlueprintContainersInner(varBlueprintContainersInner)

	return err
}

type NullableBlueprintContainersInner struct {
	value *BlueprintContainersInner
	isSet bool
}

func (v NullableBlueprintContainersInner) Get() *BlueprintContainersInner {
	return v.value
}

func (v *NullableBlueprintContainersInner) Set(val *BlueprintContainersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableBlueprintContainersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableBlueprintContainersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlueprintContainersInner(val *BlueprintContainersInner) *NullableBlueprintContainersInner {
	return &NullableBlueprintContainersInner{value: val, isSet: true}
}

func (v NullableBlueprintContainersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlueprintContainersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


