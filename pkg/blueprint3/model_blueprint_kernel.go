/*
Blueprint schema

Image Builder Blueprint  WORK IN PROGRESS 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BlueprintKernel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlueprintKernel{}

// BlueprintKernel struct for BlueprintKernel
type BlueprintKernel struct {
	// An optional string to append arguments to the bootloader kernel command line. The list will be concatenated with spaces.
	CmdlineAppend []string `json:"cmdline_append,omitempty"`
	// Kernel DNF package name to replace the standard kernel with.
	Package *string `json:"package,omitempty"`
}

// NewBlueprintKernel instantiates a new BlueprintKernel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlueprintKernel() *BlueprintKernel {
	this := BlueprintKernel{}
	return &this
}

// NewBlueprintKernelWithDefaults instantiates a new BlueprintKernel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlueprintKernelWithDefaults() *BlueprintKernel {
	this := BlueprintKernel{}
	return &this
}

// GetCmdlineAppend returns the CmdlineAppend field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BlueprintKernel) GetCmdlineAppend() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.CmdlineAppend
}

// GetCmdlineAppendOk returns a tuple with the CmdlineAppend field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BlueprintKernel) GetCmdlineAppendOk() ([]string, bool) {
	if o == nil || IsNil(o.CmdlineAppend) {
		return nil, false
	}
	return o.CmdlineAppend, true
}

// HasCmdlineAppend returns a boolean if a field has been set.
func (o *BlueprintKernel) HasCmdlineAppend() bool {
	if o != nil && !IsNil(o.CmdlineAppend) {
		return true
	}

	return false
}

// SetCmdlineAppend gets a reference to the given []string and assigns it to the CmdlineAppend field.
func (o *BlueprintKernel) SetCmdlineAppend(v []string) {
	o.CmdlineAppend = v
}

// GetPackage returns the Package field value if set, zero value otherwise.
func (o *BlueprintKernel) GetPackage() string {
	if o == nil || IsNil(o.Package) {
		var ret string
		return ret
	}
	return *o.Package
}

// GetPackageOk returns a tuple with the Package field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlueprintKernel) GetPackageOk() (*string, bool) {
	if o == nil || IsNil(o.Package) {
		return nil, false
	}
	return o.Package, true
}

// HasPackage returns a boolean if a field has been set.
func (o *BlueprintKernel) HasPackage() bool {
	if o != nil && !IsNil(o.Package) {
		return true
	}

	return false
}

// SetPackage gets a reference to the given string and assigns it to the Package field.
func (o *BlueprintKernel) SetPackage(v string) {
	o.Package = &v
}

func (o BlueprintKernel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlueprintKernel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CmdlineAppend != nil {
		toSerialize["cmdline_append"] = o.CmdlineAppend
	}
	if !IsNil(o.Package) {
		toSerialize["package"] = o.Package
	}
	return toSerialize, nil
}

type NullableBlueprintKernel struct {
	value *BlueprintKernel
	isSet bool
}

func (v NullableBlueprintKernel) Get() *BlueprintKernel {
	return v.value
}

func (v *NullableBlueprintKernel) Set(val *BlueprintKernel) {
	v.value = val
	v.isSet = true
}

func (v NullableBlueprintKernel) IsSet() bool {
	return v.isSet
}

func (v *NullableBlueprintKernel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlueprintKernel(val *BlueprintKernel) *NullableBlueprintKernel {
	return &NullableBlueprintKernel{value: val, isSet: true}
}

func (v NullableBlueprintKernel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlueprintKernel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


