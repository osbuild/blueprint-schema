openapi: 3.0.0
info:
  contact:
    name: Red Hat Image Builder Team
    url: https://osbuild.org
  description: |
    Image Builder Blueprint

    WORK IN PROGRESS
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  title: Blueprint schema
  version: "1.0"
servers:
- description: Production server
  url: https://osbuild.org/wip/api/v1
paths:
  /validate_blueprint:
    post:
      operationId: validateBlueprint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/blueprint'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/blueprint'
          description: The blueprint is valid
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: An error occurred
      summary: Validate blueprint
components:
  schemas:
    blueprint:
      additionalProperties: false
      description: |-
        Image Builder new blueprint schema.

        THIS IS WORK IN PROGRESS
      example:
        cacerts:
        - cert: cert
        - cert: cert
        systemd:
          masked:
          - masked
          - masked
          disabled:
          - disabled
          - disabled
          enabled:
          - enabled
          - enabled
        kernel:
          package: package
          cmdline_append:
          - cmdline_append
          - cmdline_append
        description: description
        fips:
          enabled: true
        storage:
          partitions:
          - subvolumes:
            - name: name
              mountpoint: mountpoint
            - name: name
              mountpoint: mountpoint
            fs_type: ext4
            logical_volumes:
            - fs_type: ext4
              name: name
              label: label
              minsize: minsize
              mountpoint: mountpoint
            - fs_type: ext4
              name: name
              label: label
              minsize: minsize
              mountpoint: mountpoint
            name: name
            label: label
            minsize: minsize
            type: plain
            mountpoint: mountpoint
          - subvolumes:
            - name: name
              mountpoint: mountpoint
            - name: name
              mountpoint: mountpoint
            fs_type: ext4
            logical_volumes:
            - fs_type: ext4
              name: name
              label: label
              minsize: minsize
              mountpoint: mountpoint
            - fs_type: ext4
              name: name
              label: label
              minsize: minsize
              mountpoint: mountpoint
            name: name
            label: label
            minsize: minsize
            type: plain
            mountpoint: mountpoint
          minsize: minsize
          type: gpt
        locale:
          keyboards:
          - keyboards
          - keyboards
          languages:
          - languages
          - languages
        timedate:
          timezone: UTC
          ntp_servers:
          - ntp_servers
          - ntp_servers
        network:
          firewall:
            services:
            - protocol: any
              port: 46277
              service: service
              from: 15087
              to: 60957
              enabled: true
            - protocol: any
              port: 46277
              service: service
              from: 15087
              to: 60957
              enabled: true
        openscap:
          tailoring: ""
          datastream: datastream
          profile_id: profile_id
        hostname: hostname
        installer:
          coreos:
            installation_device: installation_device
          anaconda:
            unattended: true
            sudo_nopasswd:
            - sudo_nopasswd
            - sudo_nopasswd
            enabled_modules:
            - org.fedoraproject.Anaconda.Modules.Localization
            - org.fedoraproject.Anaconda.Modules.Localization
            kickstart:
              base64: base64
              text: text
            disabled_modules:
            - org.fedoraproject.Anaconda.Modules.Localization
            - org.fedoraproject.Anaconda.Modules.Localization
        name: name
        containers:
        - tls_verify: true
          local_storage: false
          name: name
          source: source
        - tls_verify: true
          local_storage: false
          name: name
          source: source
        registration:
          fdo:
            manufacturing_server_url: manufacturing_server_url
            diun_pub_key_hash: diun_pub_key_hash
            di_mfg_string_type_mac_iface: di_mfg_string_type_mac_iface
            diun_pub_key_root_certs: diun_pub_key_root_certs
            diun_pub_key_insecure: false
          redhat:
            activation_key: activation_key
            connector:
              enabled: true
            insights:
              enabled: true
            organization: organization
            subscription_manager:
              product_plugin_enabled: true
              auto_registration: true
              repository_management: true
              enabled: true
        accounts:
          groups:
          - gid: 1
            name: name
          - gid: 1
            name: name
          users:
          - uid: 1
            expires: expires
            password: password
            gid: 1
            ssh_keys:
            - ssh_keys
            - ssh_keys
            shell: shell
            name: name
            description: description
            groups:
            - groups
            - groups
            home: home
          - uid: 1
            expires: expires
            password: password
            gid: 1
            ssh_keys:
            - ssh_keys
            - ssh_keys
            shell: shell
            name: name
            description: description
            groups:
            - groups
            - groups
            home: home
        dnf:
          import_keys:
          - import_keys
          - import_keys
          repositories:
          - ssl_verify: true
            usage:
              install: false
              configure: true
            gpg_check: true
            gpg_check_repo: true
            priority: 5
            base_urls:
            - base_urls
            - base_urls
            metalink: metalink
            filename: filename
            gpg_keys:
            - gpg_keys
            - gpg_keys
            mirror_list: mirror_list
            module_hotfixes: false
            name: name
            id: id
          - ssl_verify: true
            usage:
              install: false
              configure: true
            gpg_check: true
            gpg_check_repo: true
            priority: 5
            base_urls:
            - base_urls
            - base_urls
            metalink: metalink
            filename: filename
            gpg_keys:
            - gpg_keys
            - gpg_keys
            mirror_list: mirror_list
            module_hotfixes: false
            name: name
            id: id
          groups:
          - groups
          - groups
          packages:
          - packages
          - packages
          modules:
          - modules
          - modules
        ignition:
          firstboot_url: firstboot_url
          embedded:
            base64: base64
            text: text
        fsnodes:
        - mode: 5
          path: path
          ensure_parents: false
          contents:
            base64: base64
            text: text
          state: present
          type: file
          user: root
          group: root
        - mode: 5
          path: path
          ensure_parents: false
          contents:
            base64: base64
            text: text
          state: present
          type: file
          user: root
          group: root
      properties:
        description:
          description: The description attribute is a string that can be a longer
            description of the blueprint and is only used for display purposes.
          type: string
        accounts:
          $ref: '#/components/schemas/blueprint_accounts'
        cacerts:
          description: The CA certificates to be added to the image. The certificates
            are added to the system-wide CA trust store. The certificates are added
            to the /etc/pki/ca-trust/source/anchors/ directory and the update-ca-trust
            command is run to update the system-wide CA trust store.
          items:
            $ref: '#/components/schemas/blueprint_cacerts_inner'
          nullable: true
          type: array
        containers:
          description: "Containers to be pulled during the image build and stored\
            \ in the image at the default local container storage location that is\
            \ appropriate for the image type, so that all supported container tools\
            \ like podman and cri-o will be able to work with it. The embedded containers\
            \ are not started, to do so you can create systemd unit files or quadlets\
            \ with the files customization."
          items:
            $ref: '#/components/schemas/blueprint_containers_inner'
          nullable: true
          type: array
        dnf:
          $ref: '#/components/schemas/blueprint_dnf'
        fips:
          $ref: '#/components/schemas/blueprint_fips'
        fsnodes:
          description: |-
            File system nodes details.

            You can use the customization to create new files or to replace existing ones, if not restricted by the policy specified below. If the target path is an existing symlink to another file, the symlink will be replaced by the custom file.

            Please note that the parent directory of a specified file must exist. If it does not exist, the image build will fail. One can ensure that the parent directory exists by specifying "ensure_parents".

            In addition, the following files are not allowed to be created or replaced by policy: /etc/fstab, /etc/shadow, /etc/passwd and /etc/group.

            Using the files customization comes with a high chance of creating an image that doesn't boot. Use this feature only if you know what you are doing. Although the files customization can be used to configure parts of the OS which can also be configured by other blueprint customizations, this use is discouraged. If possible, users should always default to using the specialized blueprint customizations. Note that if you combine the files customizations with other customizations, the other customizations may not work as expected or may be overridden by the files customizations.

            You can create custom directories as well. The existence of a specified directory is handled gracefully only if no explicit mode, user or group is specified. If any of these customizations are specified and the directory already exists in the image, the image build will fail. The intention is to prevent changing the ownership or permissions of existing directories.
          items:
            $ref: '#/components/schemas/blueprint_fsnodes_inner'
          nullable: true
          type: array
        hostname:
          description: Hostname is an optional string that can be used to configure
            the hostname of the final image.
          type: string
        ignition:
          $ref: '#/components/schemas/blueprint_ignition'
        installer:
          $ref: '#/components/schemas/blueprint_installer'
        kernel:
          $ref: '#/components/schemas/blueprint_kernel'
        locale:
          $ref: '#/components/schemas/blueprint_locale'
        name:
          description: "The name attribute is a string that contains the name of the\
            \ blueprint. It can contain spaces, but they may be converted to dash\
            \ characters during build. It should be short and descriptive."
          type: string
        network:
          $ref: '#/components/schemas/blueprint_network'
        openscap:
          $ref: '#/components/schemas/blueprint_openscap'
        registration:
          $ref: '#/components/schemas/blueprint_registration'
        storage:
          $ref: '#/components/schemas/blueprint_storage'
        systemd:
          $ref: '#/components/schemas/blueprint_systemd'
        timedate:
          $ref: '#/components/schemas/blueprint_timedate'
      required:
      - name
      type: object
    error:
      example:
        error: error
      properties:
        error:
          type: string
      type: object
    blueprint_accounts_groups_inner:
      additionalProperties: false
      example:
        gid: 1
        name: name
      properties:
        gid:
          description: The group ID (GID) of the group.
          minimum: 1
          type: integer
        name:
          description: "Group name. Accepted characters: lowercase letters, digits,\
            \ underscores, dollars, and hyphens. Name must not start with a hyphen.\
            \ Maximum length is 256 characters. The validation pattern is a relaxed\
            \ version of https://github.com/shadow-maint/shadow/blob/master/lib/chkname.c"
          maxLength: 256
          pattern: "^[a-zA-Z0-9_.][a-zA-Z0-9_.$-]*$"
          type: string
      required:
      - name
      type: object
    blueprint_accounts_users_inner:
      additionalProperties: false
      example:
        uid: 1
        expires: expires
        password: password
        gid: 1
        ssh_keys:
        - ssh_keys
        - ssh_keys
        shell: shell
        name: name
        description: description
        groups:
        - groups
        - groups
        home: home
      properties:
        description:
          description: A longer description of the account.
          maxLength: 4096
          type: string
        expires:
          description: Date type which accepts date (YYYY-MM-DD) or date-time (RFC3339)
            format and only marshals into date format. This is needed for JSON/YAML
            compatibility since YAML automatically converts strings which look like
            dates into time.Time.
          pattern: "^\\d{4}-\\d{2}-\\d{2}T?[0-9:Z-]*"
          type: string
        gid:
          description: The primary group ID (GID) of the user. Value of zero (or ommited
            value) means that the next available UID will be assigned.
          minimum: 1
          type: integer
        groups:
          description: Additional groups that the user should be a member of.
          items:
            type: string
          type: array
        home:
          description: The home directory of the user.
          type: string
        name:
          description: "Account name. Accepted characters: lowercase letters, digits,\
            \ underscores, dollars, and hyphens. Name must not start with a hyphen.\
            \ Maximum length is 256 characters. The validation pattern is a relaxed\
            \ version of https://github.com/shadow-maint/shadow/blob/master/lib/chkname.c"
          maxLength: 256
          pattern: "^[a-zA-Z0-9_.][a-zA-Z0-9_.$-]*$"
          type: string
        password:
          description: "Password either in plain text or encrypted form. If the password\
            \ is not provided, the account will be locked and the user will not be\
            \ able to log in with a password. The password can be encrypted using\
            \ the crypt(3) function. The format of the encrypted password is $id$salt$hashed,\
            \ where $id is the algorithm used (1, 5, 6, or 2a)."
          type: string
        shell:
          description: The shell of the user.
          type: string
        ssh_keys:
          description: SSH keys to be added to the account's authorized_keys file.
          items:
            type: string
          type: array
        uid:
          description: The user ID (UID) of the user. Value of zero (or ommited value)
            means that the next available UID will be assigned.
          minimum: 1
          type: integer
      required:
      - name
      type: object
    blueprint_accounts:
      additionalProperties: false
      example:
        groups:
        - gid: 1
          name: name
        - gid: 1
          name: name
        users:
        - uid: 1
          expires: expires
          password: password
          gid: 1
          ssh_keys:
          - ssh_keys
          - ssh_keys
          shell: shell
          name: name
          description: description
          groups:
          - groups
          - groups
          home: home
        - uid: 1
          expires: expires
          password: password
          gid: 1
          ssh_keys:
          - ssh_keys
          - ssh_keys
          shell: shell
          name: name
          description: description
          groups:
          - groups
          - groups
          home: home
      properties:
        groups:
          description: Operating system group accounts to be created on the image.
          items:
            $ref: '#/components/schemas/blueprint_accounts_groups_inner'
          nullable: true
          type: array
        users:
          description: Operating system user accounts to be created on the image.
          items:
            $ref: '#/components/schemas/blueprint_accounts_users_inner'
          nullable: true
          type: array
      type: object
    blueprint_cacerts_inner:
      additionalProperties: false
      example:
        cert: cert
      properties:
        cert:
          description: The PEM-encoded certificate.
          type: string
      required:
      - cert
      type: object
    blueprint_containers_inner:
      additionalProperties: false
      example:
        tls_verify: true
        local_storage: false
        name: name
        source: source
      properties:
        local_storage:
          default: false
          description: Whether to pull the container image from the host's local-storage.
          type: boolean
        name:
          description: Container name is an optional string to set the name under
            which the container image will be saved in the image. If not specified
            name falls back to the same value as source.
          type: string
        source:
          description: Container image URL is a reference to a container image at
            a registry.
          type: string
        tls_verify:
          nullable: true
          type: boolean
      required:
      - name
      - source
      type: object
    blueprint_dnf_repositories_inner_usage:
      additionalProperties: false
      example:
        install: false
        configure: true
      properties:
        configure:
          default: true
          description: |-
            Configure the repository for dnf.

            A repository will be saved to the /etc/yum.repos.d directory in an image. An optional filename argument can be set, otherwise the repository will be saved using the the repository ID, i.e. /etc/yum.repos.d/<repo-id>.repo.
          type: boolean
        install:
          default: false
          description: |-
            Use the repository for image build.

            When this flag is set, it is possible to install third-party packages during the image build.
          type: boolean
      type: object
    blueprint_dnf_repositories_inner:
      additionalProperties: false
      example:
        ssl_verify: true
        usage:
          install: false
          configure: true
        gpg_check: true
        gpg_check_repo: true
        priority: 5
        base_urls:
        - base_urls
        - base_urls
        metalink: metalink
        filename: filename
        gpg_keys:
        - gpg_keys
        - gpg_keys
        mirror_list: mirror_list
        module_hotfixes: false
        name: name
        id: id
      nullable: true
      oneOf: []
      properties:
        id:
          description: Repository ID. Required.
          maxLength: 256
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        base_urls:
          description: Base URLs for the repository.
          items:
            type: string
          type: array
        filename:
          description: "Repository filename to use for the repository configuration\
            \ file. If not provided, the ID is used. Filename must be provided without\
            \ the .repo extension."
          maxLength: 256
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        gpg_check:
          default: true
          description: Enable GPG check for the repository.
          type: boolean
        gpg_check_repo:
          default: true
          description: Enable GPG check for the repository metadata.
          type: boolean
        gpg_keys:
          description: |-
            GPG keys for the repository.

            The blueprint accepts both inline GPG keys and GPG key urls. If an inline GPG key is provided it will be saved to the /etc/pki/rpm-gpg directory and will be referenced accordingly in the repository configuration. GPG keys are not imported to the RPM database and will only be imported when first installing a package from the third-party repository.
          items:
            type: string
          type: array
        metalink:
          description: Metalink for the repository.
          type: string
        mirror_list:
          description: Mirror list for the repository.
          type: string
        module_hotfixes:
          default: false
          description: |-
            Enable module hotfixes for the repository.

            Adds module_hotfixes flag to all repo types so it can be used during osbuild. This enables users to disable modularity filtering on specific repositories.
          type: boolean
        name:
          description: Repository name.
          type: string
        priority:
          default: 99
          description: Repository priority.
          type: integer
        ssl_verify:
          default: true
          description: Enable SSL verification for the repository.
          type: boolean
        usage:
          $ref: '#/components/schemas/blueprint_dnf_repositories_inner_usage'
      required:
      - id
      type: object
    blueprint_dnf:
      additionalProperties: false
      example:
        import_keys:
        - import_keys
        - import_keys
        repositories:
        - ssl_verify: true
          usage:
            install: false
            configure: true
          gpg_check: true
          gpg_check_repo: true
          priority: 5
          base_urls:
          - base_urls
          - base_urls
          metalink: metalink
          filename: filename
          gpg_keys:
          - gpg_keys
          - gpg_keys
          mirror_list: mirror_list
          module_hotfixes: false
          name: name
          id: id
        - ssl_verify: true
          usage:
            install: false
            configure: true
          gpg_check: true
          gpg_check_repo: true
          priority: 5
          base_urls:
          - base_urls
          - base_urls
          metalink: metalink
          filename: filename
          gpg_keys:
          - gpg_keys
          - gpg_keys
          mirror_list: mirror_list
          module_hotfixes: false
          name: name
          id: id
        groups:
        - groups
        - groups
        packages:
        - packages
        - packages
        modules:
        - modules
        - modules
      properties:
        groups:
          description: "Groups to install, must match exactly. Groups describes groups\
            \ of packages to be installed into the image. Package groups are defined\
            \ in the repository metadata. Each group has a descriptive name used primarily\
            \ for display in user interfaces and an ID more commonly used in kickstart\
            \ files. Here, the ID is the expected way of listing a group. Groups have\
            \ three different ways of categorizing their packages: mandatory, default,\
            \ and optional. For the purposes of blueprints, only mandatory and default\
            \ packages will be installed. There is no mechanism for selecting optional\
            \ packages."
          items:
            type: string
          nullable: true
          type: array
        import_keys:
          description: Additional file paths to the GPG keys to import. The files
            must be present in the image. Does not support importing from URLs.
          items:
            type: string
          nullable: true
          type: array
        modules:
          description: Modules to enable or disable
          items:
            type: string
          nullable: true
          type: array
        packages:
          description: "Packages to install. Package name or NVRA is accepted as long\
            \ as DNF can resolve it. Examples: vim-enhanced, vim-enhanced-9.1.866-1\
            \ or vim-enhanced-9.1.866-1.fc41.x86_64. The packages can also be specified\
            \ as @group_name to install all packages in the group."
          items:
            type: string
          nullable: true
          type: array
        repositories:
          description: |-
            Third-party repositories are supported by the blueprint customizations.

            All fields reflect configuration values of dnf, see man dnf.conf(5) for more information.
          items:
            $ref: '#/components/schemas/blueprint_dnf_repositories_inner'
          nullable: true
          type: array
      type: object
    blueprint_fips:
      additionalProperties: false
      example:
        enabled: true
      properties:
        enabled:
          description: "Enables the system FIPS mode (disabled by default). Currently\
            \ only edge-raw-image, edge-installer, edge-simplified-installer, edge-ami\
            \ and edge-vsphere images support this customization."
          type: boolean
      type: object
    blueprint_fsnodes_inner_contents:
      additionalProperties: false
      example:
        base64: base64
        text: text
      properties:
        base64:
          description: Base64-encoded file contents. Useful for binaries.
          type: string
        text:
          description: Plain text file contents.
          type: string
      type: object
    blueprint_fsnodes_inner:
      additionalProperties: false
      allOf:
      - anyOf: []
        nullable: true
      example:
        mode: 5
        path: path
        ensure_parents: false
        contents:
          base64: base64
          text: text
        state: present
        type: file
        user: root
        group: root
      properties:
        type:
          default: file
          description: "Type is the type of the file system node, one of: file, dir."
          enum:
          - file
          - dir
          type: string
        contents:
          $ref: '#/components/schemas/blueprint_fsnodes_inner_contents'
        ensure_parents:
          default: false
          description: EnsureParents is a boolean that determines if the parent directories
            should be created if they do not exist.
          type: boolean
        group:
          default: root
          description: Group is the file system node group. Defaults to root.
          type: string
        mode:
          description: Mode is the file system node permissions. Defaults to 0644
            for files and 0755 for directories.
          type: integer
        path:
          description: Path is the absolute path to the file or directory.
          pattern: ^/
          type: string
        state:
          default: present
          description: "State is the state of the file system node, one of: present,\
            \ absent."
          enum:
          - present
          - absent
          type: string
        user:
          default: root
          description: User is the file system node owner. Defaults to root.
          type: string
      required:
      - path
      type: object
    blueprint_ignition_embedded:
      additionalProperties: false
      example:
        base64: base64
        text: text
      nullable: true
      oneOf: []
      properties:
        base64:
          description: Ignition data formatted in base64.
          type: string
        text:
          description: Ignition data formatted in plain text.
          type: string
      type: object
    blueprint_ignition:
      additionalProperties: false
      example:
        firstboot_url: firstboot_url
        embedded:
          base64: base64
          text: text
      nullable: true
      oneOf: []
      properties:
        embedded:
          $ref: '#/components/schemas/blueprint_ignition_embedded'
        firstboot_url:
          description: |-
            The URL to the Ignition configuration to be used by Ignition. This configuration is a URL to a remote Ignition configuration. The firstboot_url is used if the embedded configuration is not specified.

            Cannot be used with embedded_base64 or embedded_text.
          type: string
      type: object
    blueprint_installer_anaconda_kickstart:
      additionalProperties: false
      example:
        base64: base64
        text: text
      nullable: true
      oneOf: []
      properties:
        base64:
          description: Kickstart file formatted in base64.
          type: string
        text:
          description: Kickstart file formatted in plain text.
          type: string
      type: object
    blueprint_installer_anaconda:
      additionalProperties: false
      example:
        unattended: true
        sudo_nopasswd:
        - sudo_nopasswd
        - sudo_nopasswd
        enabled_modules:
        - org.fedoraproject.Anaconda.Modules.Localization
        - org.fedoraproject.Anaconda.Modules.Localization
        kickstart:
          base64: base64
          text: text
        disabled_modules:
        - org.fedoraproject.Anaconda.Modules.Localization
        - org.fedoraproject.Anaconda.Modules.Localization
      properties:
        disabled_modules:
          items:
            enum:
            - org.fedoraproject.Anaconda.Modules.Localization
            - org.fedoraproject.Anaconda.Modules.Network
            - org.fedoraproject.Anaconda.Modules.Payloads
            - org.fedoraproject.Anaconda.Modules.Runtime
            - org.fedoraproject.Anaconda.Modules.Security
            - org.fedoraproject.Anaconda.Modules.Services
            - org.fedoraproject.Anaconda.Modules.Storage
            - org.fedoraproject.Anaconda.Modules.Subscription
            - org.fedoraproject.Anaconda.Modules.Timezone
            - org.fedoraproject.Anaconda.Modules.User
            type: string
          nullable: true
          type: array
        enabled_modules:
          items:
            enum:
            - org.fedoraproject.Anaconda.Modules.Localization
            - org.fedoraproject.Anaconda.Modules.Network
            - org.fedoraproject.Anaconda.Modules.Payloads
            - org.fedoraproject.Anaconda.Modules.Runtime
            - org.fedoraproject.Anaconda.Modules.Security
            - org.fedoraproject.Anaconda.Modules.Services
            - org.fedoraproject.Anaconda.Modules.Storage
            - org.fedoraproject.Anaconda.Modules.Subscription
            - org.fedoraproject.Anaconda.Modules.Timezone
            - org.fedoraproject.Anaconda.Modules.User
            type: string
          nullable: true
          type: array
        kickstart:
          $ref: '#/components/schemas/blueprint_installer_anaconda_kickstart'
        sudo_nopasswd:
          description: "Sudo users with NOPASSWD option. Adds a snippet to the kickstart\
            \ file that, after installation, will create drop-in files in /etc/sudoers.d\
            \ to allow the specified users and groups to run sudo without a password\
            \ (groups must be prefixed with %)."
          items:
            maxLength: 256
            pattern: "^[%a-zA-Z0-9_.][a-zA-Z0-9_.$-]*$"
            type: string
          type: array
        unattended:
          description: "Unattended installation Anaconda flag. When not set, Anaconda\
            \ installer will ask for user input."
          type: boolean
      type: object
    blueprint_installer_coreos:
      additionalProperties: false
      example:
        installation_device: installation_device
      properties:
        installation_device:
          description: Installation device for iot/edge simplified installer image
            types.
          type: string
      type: object
    blueprint_installer:
      additionalProperties: false
      example:
        coreos:
          installation_device: installation_device
        anaconda:
          unattended: true
          sudo_nopasswd:
          - sudo_nopasswd
          - sudo_nopasswd
          enabled_modules:
          - org.fedoraproject.Anaconda.Modules.Localization
          - org.fedoraproject.Anaconda.Modules.Localization
          kickstart:
            base64: base64
            text: text
          disabled_modules:
          - org.fedoraproject.Anaconda.Modules.Localization
          - org.fedoraproject.Anaconda.Modules.Localization
      properties:
        anaconda:
          $ref: '#/components/schemas/blueprint_installer_anaconda'
        coreos:
          $ref: '#/components/schemas/blueprint_installer_coreos'
      type: object
    blueprint_kernel:
      additionalProperties: false
      example:
        package: package
        cmdline_append:
        - cmdline_append
        - cmdline_append
      properties:
        cmdline_append:
          description: An optional string to append arguments to the bootloader kernel
            command line. The list will be concatenated with spaces.
          items:
            type: string
          nullable: true
          type: array
        package:
          description: Kernel DNF package name to replace the standard kernel with.
          type: string
      type: object
    blueprint_locale:
      additionalProperties: false
      example:
        keyboards:
        - keyboards
        - keyboards
        languages:
        - languages
        - languages
      properties:
        keyboards:
          default:
          - us
          description: "The keyboards attribute is a list of strings that contains\
            \ the keyboards to be installed on the image. To list available keyboards,\
            \ run: localectl list-keymaps"
          items:
            type: string
          nullable: true
          type: array
        languages:
          default:
          - en_US.UTF-8
          description: "The languages attribute is a list of strings that contains\
            \ the languages to be installed on the image. To list available languages,\
            \ run: localectl list-locales"
          items:
            type: string
          nullable: true
          type: array
      type: object
    blueprint_network_firewall_services_inner:
      additionalProperties: false
      example:
        protocol: any
        port: 46277
        service: service
        from: 15087
        to: 60957
        enabled: true
      nullable: true
      oneOf: []
      properties:
        enabled:
          nullable: true
          type: boolean
        from:
          maximum: 65535
          minimum: 1
          type: integer
        port:
          maximum: 65535
          minimum: 1
          type: integer
        protocol:
          default: any
          enum:
          - tcp
          - udp
          - any
          type: string
        service:
          minLength: 2
          type: string
        to:
          maximum: 65535
          minimum: 1
          type: integer
      type: object
    blueprint_network_firewall:
      additionalProperties: false
      example:
        services:
        - protocol: any
          port: 46277
          service: service
          from: 15087
          to: 60957
          enabled: true
        - protocol: any
          port: 46277
          service: service
          from: 15087
          to: 60957
          enabled: true
      properties:
        services:
          description: |-
            Services to enable or disable. The service can be defined via an assigned IANA name, port number or port range.

            Services are processed in order, when a service is disabled and then accidentally enabled via a port or a port range, the service will be enabled in the end.

            By default the firewall blocks all access, except for services that enable their ports explicitly such as the sshd.
          items:
            $ref: '#/components/schemas/blueprint_network_firewall_services_inner'
          nullable: true
          type: array
      type: object
    blueprint_network:
      additionalProperties: false
      example:
        firewall:
          services:
          - protocol: any
            port: 46277
            service: service
            from: 15087
            to: 60957
            enabled: true
          - protocol: any
            port: 46277
            service: service
            from: 15087
            to: 60957
            enabled: true
      properties:
        firewall:
          $ref: '#/components/schemas/blueprint_network_firewall'
      type: object
    blueprint_openscap:
      additionalProperties: false
      example:
        tailoring: ""
        datastream: datastream
        profile_id: profile_id
      properties:
        datastream:
          description: "Datastream to use for the scan. The datastream is the path\
            \ to the SCAP datastream file to use for the scan. If the datastream parameter\
            \ is not provided, a sensible default based on the selected distro will\
            \ be chosen."
          type: string
        profile_id:
          description: The desired security profile ID.
          type: string
        tailoring:
          anyOf: []
          nullable: true
      required:
      - profile_id
      type: object
    blueprint_registration_fdo:
      additionalProperties: false
      example:
        manufacturing_server_url: manufacturing_server_url
        diun_pub_key_hash: diun_pub_key_hash
        di_mfg_string_type_mac_iface: di_mfg_string_type_mac_iface
        diun_pub_key_root_certs: diun_pub_key_root_certs
        diun_pub_key_insecure: false
      nullable: true
      oneOf: []
      properties:
        di_mfg_string_type_mac_iface:
          description: Optional interface name for the MAC address.
          type: string
        diun_pub_key_hash:
          description: FDO server public key hex-encoded hash. Cannot be used together
            with insecure option or root certs.
          type: string
        diun_pub_key_insecure:
          default: false
          description: "FDO insecure option. When set, both hash or root certs must\
            \ not be set."
          type: boolean
        diun_pub_key_root_certs:
          description: FDO server public key root certificate path. Cannot be used
            together with insecure option or hash.
          type: string
        manufacturing_server_url:
          description: FDO manufacturing server URL.
          type: string
      required:
      - manufacturing_server_url
      type: object
    blueprint_registration_redhat_connector:
      additionalProperties: false
      example:
        enabled: true
      properties:
        enabled:
          description: Enables rhc (Red Hat Connector) during boot.
          type: boolean
      required:
      - enabled
      type: object
    blueprint_registration_redhat_insights:
      additionalProperties: false
      example:
        enabled: true
      properties:
        enabled:
          description: Enables insights client during boot.
          type: boolean
      required:
      - enabled
      type: object
    blueprint_registration_redhat_subscription_manager:
      additionalProperties: false
      example:
        product_plugin_enabled: true
        auto_registration: true
        repository_management: true
        enabled: true
      properties:
        auto_registration:
          default: true
          description: Enabled auto_registration plugin configuration.
          type: boolean
        enabled:
          default: true
          description: Enables the subscription-manager DNF plugin.
          type: boolean
        product_plugin_enabled:
          default: true
          description: Enables the product-id DNF plugin.
          type: boolean
        repository_management:
          default: true
          description: Enabled repository_management plugin configuration.
          type: boolean
      required:
      - auto_registration
      - enabled
      - product_plugin_enabled
      - repository_management
      type: object
    blueprint_registration_redhat:
      additionalProperties: false
      example:
        activation_key: activation_key
        connector:
          enabled: true
        insights:
          enabled: true
        organization: organization
        subscription_manager:
          product_plugin_enabled: true
          auto_registration: true
          repository_management: true
          enabled: true
      properties:
        activation_key:
          description: Subscription manager activation key to use during registration.
            A list of keys to use to redeem or apply specific subscriptions to the
            system.
          type: string
        connector:
          $ref: '#/components/schemas/blueprint_registration_redhat_connector'
        insights:
          $ref: '#/components/schemas/blueprint_registration_redhat_insights'
        organization:
          description: Subscription manager organization name to use during registration.
          type: string
        subscription_manager:
          $ref: '#/components/schemas/blueprint_registration_redhat_subscription_manager'
      type: object
    blueprint_registration:
      additionalProperties: false
      example:
        fdo:
          manufacturing_server_url: manufacturing_server_url
          diun_pub_key_hash: diun_pub_key_hash
          di_mfg_string_type_mac_iface: di_mfg_string_type_mac_iface
          diun_pub_key_root_certs: diun_pub_key_root_certs
          diun_pub_key_insecure: false
        redhat:
          activation_key: activation_key
          connector:
            enabled: true
          insights:
            enabled: true
          organization: organization
          subscription_manager:
            product_plugin_enabled: true
            auto_registration: true
            repository_management: true
            enabled: true
      properties:
        fdo:
          $ref: '#/components/schemas/blueprint_registration_fdo'
        redhat:
          $ref: '#/components/schemas/blueprint_registration_redhat'
      type: object
    blueprint_storage_partitions_inner_logical_volumes_inner:
      additionalProperties: false
      example:
        fs_type: ext4
        name: name
        label: label
        minsize: minsize
        mountpoint: mountpoint
      properties:
        fs_type:
          default: ext4
          description: "File system type: ext4 (default), xfs, swap, or vfat."
          enum:
          - ext4
          - xfs
          - swap
          - vfat
          type: string
        label:
          description: Label of the logical volume.
          type: string
        minsize:
          description: |-
            Minimum size of the logical volume.

            Size must be formatted as an integer followed by whitespace and then either a decimal unit (B, KB/kB, MB, GB, TB, PB, EB) or binary unit (KiB, MiB, GiB, TiB, PiB, EiB).
          pattern: "^\\d+\\s*[BKkMGTPE]i?[BKMGTPE]?$"
          type: string
        mountpoint:
          description: Mount point of the logical volume. Required except for swap
            fs_type.
          pattern: ^/
          type: string
        name:
          description: "Logical volume name. When not set, will be generated automatically."
          type: string
      type: object
    blueprint_storage_partitions_inner_subvolumes_inner:
      additionalProperties: false
      example:
        name: name
        mountpoint: mountpoint
      properties:
        mountpoint:
          description: Mount point of the subvolume. Required. Swap filesystem type
            is not supported on BTRFS volumes.
          pattern: ^/
          type: string
        name:
          description: "Subvolume name, must also define its parent volume."
          type: string
      type: object
    blueprint_storage_partitions_inner:
      additionalProperties: false
      allOf:
      - anyOf: []
        nullable: true
      - anyOf: []
        nullable: true
      - anyOf: []
        nullable: true
      example:
        subvolumes:
        - name: name
          mountpoint: mountpoint
        - name: name
          mountpoint: mountpoint
        fs_type: ext4
        logical_volumes:
        - fs_type: ext4
          name: name
          label: label
          minsize: minsize
          mountpoint: mountpoint
        - fs_type: ext4
          name: name
          label: label
          minsize: minsize
          mountpoint: mountpoint
        name: name
        label: label
        minsize: minsize
        type: plain
        mountpoint: mountpoint
      properties:
        type:
          default: plain
          description: "Partition type: plain (default), lvm, or btrfs."
          enum:
          - plain
          - lvm
          - btrfs
          type: string
        fs_type:
          default: ext4
          description: |-
            File system type: ext4 (default), xfs, swap, or vfat.

            Relevant for partition types: plain.
          enum:
          - ext4
          - xfs
          - swap
          - vfat
          type: string
        label:
          description: |-
            Label of the partition.

            Relevant for partition types: plain.
          type: string
        logical_volumes:
          description: |-
            LVM logical volumes to create within the volume group.

            Relevant for partition types: lvm.
          items:
            $ref: '#/components/schemas/blueprint_storage_partitions_inner_logical_volumes_inner'
          type: array
        minsize:
          description: |-
            Minimum size of the volume.

            Size must be formatted as an integer followed by whitespace and then either a decimal unit (B, KB/kB, MB, GB, TB, PB, EB) or binary unit (KiB, MiB, GiB, TiB, PiB, EiB).

            Relevant for partition types: plain, lvm, btrfs.
          pattern: "^\\d+\\s*[BKkMGTPE]i?[BKMGTPE]?$"
          type: string
        mountpoint:
          description: |-
            Mount point of the partition. Required except for swap fs_type.

            Relevant for partition types: plain.
          pattern: ^/
          type: string
        name:
          description: |-
            LVM volume group name. When not set, will be generated automatically.

            Relevant for partition types: lvm.
          type: string
        subvolumes:
          description: |-
            BTRFS subvolumes to create.

            Relevant for partition types: btrfs.
          items:
            $ref: '#/components/schemas/blueprint_storage_partitions_inner_subvolumes_inner'
          type: array
      required:
      - type
      type: object
    blueprint_storage:
      additionalProperties: false
      example:
        partitions:
        - subvolumes:
          - name: name
            mountpoint: mountpoint
          - name: name
            mountpoint: mountpoint
          fs_type: ext4
          logical_volumes:
          - fs_type: ext4
            name: name
            label: label
            minsize: minsize
            mountpoint: mountpoint
          - fs_type: ext4
            name: name
            label: label
            minsize: minsize
            mountpoint: mountpoint
          name: name
          label: label
          minsize: minsize
          type: plain
          mountpoint: mountpoint
        - subvolumes:
          - name: name
            mountpoint: mountpoint
          - name: name
            mountpoint: mountpoint
          fs_type: ext4
          logical_volumes:
          - fs_type: ext4
            name: name
            label: label
            minsize: minsize
            mountpoint: mountpoint
          - fs_type: ext4
            name: name
            label: label
            minsize: minsize
            mountpoint: mountpoint
          name: name
          label: label
          minsize: minsize
          type: plain
          mountpoint: mountpoint
        minsize: minsize
        type: gpt
      properties:
        type:
          default: gpt
          description: "Device partitioning type: gpt (default) or mbr."
          enum:
          - gpt
          - mbr
          type: string
        minsize:
          description: |-
            Minimum size of the storage device. When not set, the image size is acquired from image request.

            Size must be formatted as an integer followed by whitespace and then either a decimal unit (B, KB/kB, MB, GB, TB, PB, EB) or binary unit (KiB, MiB, GiB, TiB, PiB, EiB).
          pattern: "^\\d+\\s*[BKkMGTPE]i?[BKMGTPE]?$"
          type: string
        partitions:
          description: "Partitions of the following types: plain (default), lvm, or\
            \ btrfs."
          items:
            $ref: '#/components/schemas/blueprint_storage_partitions_inner'
          type: array
      required:
      - minsize
      - partitions
      - type
      type: object
    blueprint_systemd:
      additionalProperties: false
      example:
        masked:
        - masked
        - masked
        disabled:
        - disabled
        - disabled
        enabled:
        - enabled
        - enabled
      properties:
        disabled:
          description: The disabled attribute is a list of strings that contains the
            systemd units to be disabled.
          items:
            type: string
          nullable: true
          type: array
        enabled:
          description: The enabled attribute is a list of strings that contains the
            systemd units to be enabled.
          items:
            type: string
          nullable: true
          type: array
        masked:
          description: The masked attribute is a list of strings that contains the
            systemd units to be masked.
          items:
            type: string
          nullable: true
          type: array
      type: object
    blueprint_timedate:
      additionalProperties: false
      example:
        timezone: UTC
        ntp_servers:
        - ntp_servers
        - ntp_servers
      properties:
        ntp_servers:
          description: An optional list of strings containing NTP servers to use.
            If not provided the distribution defaults are used
          items:
            type: string
          type: array
        timezone:
          default: UTC
          description: "System time zone. Defaults to UTC. To list available time\
            \ zones run: timedatectl list-timezones"
          type: string
      required:
      - timezone
      type: object
